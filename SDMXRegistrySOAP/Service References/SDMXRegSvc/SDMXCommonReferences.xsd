<?xml version="1.0" encoding="utf-8"?>
<xs:schema xmlns="http://www.sdmx.org/resources/sdmxml/schemas/v2_1/common" elementFormDefault="qualified" targetNamespace="http://www.sdmx.org/resources/sdmxml/schemas/v2_1/common" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:annotation>
    <xs:appinfo>SDMX Common References Module</xs:appinfo>
    <xs:documentation>The common references module contains common constructs that are used to reference objects.</xs:documentation>
  </xs:annotation>
  <xs:simpleType name="NestedIDType">
    <xs:annotation>
      <xs:documentation>NestedIDType is the least restrictive form of an identifier used throughout all SDMX-ML messages. It allows for a hierarchical identifier, with each portion separated by the '.' character. For the identifier portions, valid characters include A-Z, a-z, @, 0-9, _, -, $.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="[A-z0-9_@$\-]+(\.[A-z0-9_@$\-]+)*" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="TwoLevelIDType">
    <xs:annotation>
      <xs:documentation>TwoLevelIDType defines an identifier with exactly two levels.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="NestedIDType">
      <xs:pattern value="[A-z0-9_@$\-]+\.[A-z0-9_@$\-]+" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="IDType">
    <xs:annotation>
      <xs:documentation>IDType provides a type which is used for restricting the characters in codes and IDs throughout all SDMX-ML messages. Valid characters include A-Z, a-z, @, 0-9, _, -, $.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="NestedIDType">
      <xs:pattern value="[A-z0-9_@$\-]+" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="NCNameIDType">
    <xs:annotation>
      <xs:documentation>NCNameIDType restricts the IDType, so that the id may be used to generate valid XML components. IDs created from this type conform to the W3C XML Schema NCNAME type, and therefore can be used as element or attribute names.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="IDType">
      <xs:pattern value="[A-z][A-z0-9_\-]*" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="NestedNCNameIDType">
    <xs:annotation>
      <xs:documentation>NestedNCNameIDType restricts the NestedIDType, so that the id may be used to generate valid XML components. IDs created from this type conform to the W3C XML Schema NCNAME type, and therefore can be used as element or attribute names.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="NestedIDType">
      <xs:pattern value="[A-z][A-z0-9_\-]*(\.[A-z][A-z0-9_\-]*)*" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="SingleNCNameIDType">
    <xs:annotation>
      <xs:documentation>SingleNCNameIDType restricts the NestedNCNameIDType to allow only one level. Note that this is the same pattern as the NCNameIDType, but can be used when the base type to be restricted is a nested NCNameIDType (where as the NCNameIDType could only restrict the IDType).</xs:documentation>
    </xs:annotation>
    <xs:restriction base="NestedNCNameIDType">
      <xs:pattern value="[A-z][A-z0-9_\-]*" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="VersionType">
    <xs:annotation>
      <xs:documentation>VersionType is used to communicate version information. The format is restricted to allow for simple incrementing and sorting of version number. The version consists of an unlimited set of numeric components, separated by the '.' character. When processing version, each numeric component (the number preceding and following any '.' character) should be parsed as an integer. Thus, a version of 1.3 and 1.03 would be equivalent, as both the '3' component and the '03' component would parse to an integer value of 3.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="[0-9]+(\.[0-9]+)*" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="VersionQueryType">
    <xs:annotation>
      <xs:documentation>VersionQueryType combines the VersionType and LateBoundVersionType to allow one to query for either a specific version of an object, or the latest version by specifying the '*' value.</xs:documentation>
    </xs:annotation>
    <xs:union memberTypes="VersionType LateBoundVersionType" />
  </xs:simpleType>
  <xs:simpleType name="LateBoundVersionType">
    <xs:annotation>
      <xs:documentation>LateBoundVersionType is a single value code list, used to include the '*' character - indicating that the latest version of an object is required.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="*">
        <xs:annotation>
          <xs:documentation>Indicates that the latest version of an object is requested.</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="EmptyType">
    <xs:annotation>
      <xs:documentation>EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.</xs:documentation>
    </xs:annotation>
  </xs:complexType>
  <xs:complexType name="ReferenceType" abstract="true">
    <xs:annotation>
      <xs:documentation>ReferenceType is an abstract base type. It is used as the basis for all references, to all for a top level generic object reference that can be substituted with an explicit reference to any object. Any reference can consist of a Ref (which contains all required reference fields separately) and/or a URN. These must result in the identification of the same object. Note that the Ref and URN elements are local and unqualified in order to allow for refinement of this structure outside of the namespace. This allows any reference to further refined by a different namespace. For example, a metadata structure definition specific metadata set might wish to restrict the URN to only allow for a value from an enumerated list. The general URN structure, for the purpose of mapping the reference fields is as follows: urn:sdmx:org.package-name.class-name=agency-id:(maintainable-parent-object-id[maintainable-parent-object-version].)?(container-object-id.)?object-id([object-version])?.</xs:documentation>
    </xs:annotation>
    <xs:choice>
      <xs:sequence>
        <xs:element form="unqualified" name="Ref" type="RefBaseType">
          <xs:annotation>
            <xs:documentation>Ref is used to provide a complete set of reference fields. Derived reference types will restrict the RefType so that the content of the Ref element requires exactly what is needed for a complete reference.</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element minOccurs="0" form="unqualified" name="URN" type="xs:anyURI">
          <xs:annotation>
            <xs:documentation>URN is used to hold the URN of the referenced object. This must be the same URN that would be constructed from the individual fields in the Ref element.</xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:sequence>
      <xs:element form="unqualified" name="URN" type="xs:anyURI">
        <xs:annotation>
          <xs:documentation>URN is used to hold the URN of the referenced object.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:choice>
  </xs:complexType>
  <xs:complexType name="RefBaseType" abstract="true">
    <xs:annotation>
      <xs:documentation>RefBaseType is an abstract base type the defines the basis for any set of complete reference fields. This should be refined by derived types so that only the necessary fields are available and required as necessary. This can be used for both full and local references (when some of the values are implied from another context). A local reference is indicated with the local attribute. The values in this type correspond directly to the components of the URN structure, and thus can be used to compose a URN when the local attribute value is false. As this is the case, any reference components which are not part of the URN structure should not be present in the derived types.</xs:documentation>
    </xs:annotation>
    <xs:attribute name="agencyID" type="NestedNCNameIDType" use="optional">
      <xs:annotation>
        <xs:documentation>The agencyID attribute identifies the maintenance agency for the object being referenced (agency-id in the URN structure). This is optional to allow for local references (where the other reference fields are inferred from another context), but all complete references will require this.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="maintainableParentID" type="IDType" use="optional">
      <xs:annotation>
        <xs:documentation>The maintainableParentID attribute identifies the maintainable object in which the referenced object is defined, if applicable (maintainable-parent-object-id in the URN structure). This is only used in references where the referenced object is not itself maintainable.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="maintainableParentVersion" type="VersionType" use="optional">
      <xs:annotation>
        <xs:documentation>The maintainableParentVersion attribute identifies the version of the maintainable object in which the referenced object is defined (maintainable-parent-object-version in the URN structure). This is only used in references where the referenced object is not itself maintainable. This should only be used when the maintainableParentID is present. If this is available, a default of 1.0 will always apply.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="containerID" type="NestedIDType" use="optional">
      <xs:annotation>
        <xs:documentation>The containerID attribute identifies the object within a maintainable object in which the referenced object is defined (container-object-id in the URN structure). This is only used in references where the referenced object is not contained directly within a maintainable object (e.g. a Component within a ComponentList, within a maintainable Structure). If the container has a fixed identifier, this attribute will not be present.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="id" type="NestedIDType" use="required">
      <xs:annotation>
        <xs:documentation>The id attribute identifies the object being referenced, and is therefore always required.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="version" type="VersionType" use="optional">
      <xs:annotation>
        <xs:documentation>The version attribute identifies the version of the object being reference, if applicable. If this is available, a default value of 1.0 will always apply.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="local" type="xs:boolean" use="optional">
      <xs:annotation>
        <xs:documentation>The local attribute indicates whether this set of reference fields is meant for local referencing, in which case some of the reference fields will be implied from another context. Concrete instances of this class will always fix this value to either true or false, depending on their intended usage. If the value is fixed to true, then the complete set of reference fields will be required and a URN can be fully composed from the values.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="class" type="ObjectTypeCodelistType" use="optional">
      <xs:annotation>
        <xs:documentation>The class attribute indicates the class name of the object being referenced. This attribute allows any reference to be processed generically from this definition. References derived from this should fix the value of this attribute to indicate the type of object that is being referenced, or in the case that a reference which allows specific types of fields, the representation should be sub-setted to the appropriate values.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="package" type="PackageTypeCodelistType" use="optional">
      <xs:annotation>
        <xs:documentation>The package attribute indicates the package name for the object being referenced. This attribute allows any reference to be processed generically from this definition. References derived from this should fix the value of this attribute to indicate the type of object that is being referenced, or in the case that a reference which allows specific types of fields, the representation should be sub-setted to the appropriate values.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="ObjectReferenceType">
    <xs:annotation>
      <xs:documentation>ObjectReferenceType is a generic reference which allows for any object to be referenced. The type of object actually referenced can be determined from the URN or from the class attribute of the full set of reference fields.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="ReferenceType">
        <xs:choice>
          <xs:sequence>
            <xs:element form="unqualified" name="Ref" type="ObjectRefType" />
            <xs:element minOccurs="0" form="unqualified" name="URN" type="xs:anyURI" />
          </xs:sequence>
          <xs:element form="unqualified" name="URN" type="xs:anyURI" />
        </xs:choice>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="ObjectRefType">
    <xs:annotation>
      <xs:documentation>ObjectRefType contains a set of reference fields for the purpose of referencing any object. This cannot be a local reference, therefore the agency identifier is required. It is also required that the class and package be supplied for the referenced object such that a complete URN reference can be built from the values provided. Note that this is not capable of fully validating that all necessary fields are supplied for a given object type.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="RefBaseType">
        <xs:attribute name="agencyID" type="NestedNCNameIDType" use="required" />
        <xs:attribute fixed="false" name="local" type="xs:boolean" use="optional" />
        <xs:attribute name="class" type="ObjectTypeCodelistType" use="required" />
        <xs:attribute name="package" type="PackageTypeCodelistType" use="required" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="MaintainableRefBaseType" abstract="true">
    <xs:annotation>
      <xs:documentation>MaintainableRefBaseType is an abstract base type for referencing a maintainable object.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="RefBaseType">
        <xs:attribute name="agencyID" type="NestedNCNameIDType" use="required" />
        <xs:attribute name="maintainableParentID" type="IDType" use="prohibited" />
        <xs:attribute name="maintainableParentVersion" type="VersionType" use="prohibited" />
        <xs:attribute name="containerID" type="NestedIDType" use="prohibited" />
        <xs:attribute name="id" type="IDType" use="required" />
        <xs:attribute default="1.0" name="version" type="VersionType" use="optional" />
        <xs:attribute fixed="false" name="local" type="xs:boolean" use="optional" />
        <xs:attribute name="class" type="MaintainableTypeCodelistType" use="optional" />
        <xs:attribute name="package" type="PackageTypeCodelistType" use="optional" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="MaintainableRefType">
    <xs:annotation>
      <xs:documentation>MaintainableRefType contains a complete set of reference fields for referencing any maintainable object.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="MaintainableRefBaseType">
        <xs:attribute name="class" type="ConcreteMaintainableTypeCodelistType" use="required" />
        <xs:attribute name="package" type="PackageTypeCodelistType" use="required" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="ItemSchemeRefBaseType" abstract="true">
    <xs:annotation>
      <xs:documentation>ItemSchemeRefBaseType is an abstract base type for referencing an item scheme.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="MaintainableRefBaseType">
        <xs:attribute name="agencyID" type="NestedNCNameIDType" use="required" />
        <xs:attribute name="id" type="IDType" use="required" />
        <xs:attribute default="1.0" name="version" type="VersionType" use="optional" />
        <xs:attribute fixed="false" name="local" type="xs:boolean" use="optional" />
        <xs:attribute name="class" type="ItemSchemeTypeCodelistType" use="optional" />
        <xs:attribute name="package" type="ItemSchemePackageTypeCodelistType" use="optional" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="ItemSchemeRefType">
    <xs:annotation>
      <xs:documentation>ItemSchemeRefType contains a complete set of reference fields for referencing any item scheme. The class and package a required so that the reference is explicit as to the exact object being referenced.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="ItemSchemeRefBaseType">
        <xs:attribute name="class" type="ItemSchemeTypeCodelistType" use="required" />
        <xs:attribute name="package" type="ItemSchemePackageTypeCodelistType" use="required" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="StructureOrUsageRefBaseType" abstract="true">
    <xs:annotation>
      <xs:documentation>StructureOrUsageRefBaseType is an abstract base type for referencing a structure or structure usage.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="MaintainableRefBaseType">
        <xs:attribute name="agencyID" type="NestedNCNameIDType" use="required" />
        <xs:attribute name="id" type="IDType" use="required" />
        <xs:attribute default="1.0" name="version" type="VersionType" use="optional" />
        <xs:attribute fixed="false" name="local" type="xs:boolean" use="optional" />
        <xs:attribute name="class" type="StructureOrUsageTypeCodelistType" use="optional" />
        <xs:attribute name="package" type="StructurePackageTypeCodelistType" use="optional" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="StructureRefBaseType" abstract="true">
    <xs:annotation>
      <xs:documentation>StructureRefBaseType is an abstract base type for referencing a structure.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="StructureOrUsageRefBaseType">
        <xs:attribute name="agencyID" type="NestedNCNameIDType" use="required" />
        <xs:attribute name="id" type="IDType" use="required" />
        <xs:attribute default="1.0" name="version" type="VersionType" use="optional" />
        <xs:attribute fixed="false" name="local" type="xs:boolean" use="optional" />
        <xs:attribute name="class" type="StructureTypeCodelistType" use="optional" />
        <xs:attribute name="package" type="StructurePackageTypeCodelistType" use="optional" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="StructureRefType">
    <xs:annotation>
      <xs:documentation>StructureRefType contains a set of reference fields for referencing any structure.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="StructureRefBaseType">
        <xs:attribute name="class" type="StructureTypeCodelistType" use="required" />
        <xs:attribute name="package" type="StructurePackageTypeCodelistType" use="required" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="StructureUsageRefBaseType" abstract="true">
    <xs:annotation>
      <xs:documentation>StructureUsageRefBaseType is an abstract base type for referencing a structure usage.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="StructureOrUsageRefBaseType">
        <xs:attribute name="agencyID" type="NestedNCNameIDType" use="required" />
        <xs:attribute name="id" type="IDType" use="required" />
        <xs:attribute default="1.0" name="version" type="VersionType" use="optional" />
        <xs:attribute fixed="false" name="local" type="xs:boolean" use="optional" />
        <xs:attribute name="class" type="StructureUsageTypeCodelistType" use="optional" />
        <xs:attribute name="package" type="StructurePackageTypeCodelistType" use="optional" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="StructureUsageRefType">
    <xs:annotation>
      <xs:documentation>StructureUsageRefType contains a set of reference fields for referencing any structure usage.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="StructureUsageRefBaseType">
        <xs:attribute name="class" type="StructureUsageTypeCodelistType" use="required" />
        <xs:attribute name="package" type="StructurePackageTypeCodelistType" use="required" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="ChildObjectRefBaseType" abstract="true">
    <xs:annotation>
      <xs:documentation>ChildObjectRefBaseType is an abstract base type for referencing any child object defined directly within a maintainable object.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="RefBaseType">
        <xs:attribute name="agencyID" type="NestedNCNameIDType" use="required" />
        <xs:attribute name="maintainableParentID" type="IDType" use="required" />
        <xs:attribute default="1.0" name="maintainableParentVersion" type="VersionType" use="optional" />
        <xs:attribute name="containerID" type="NestedIDType" use="prohibited" />
        <xs:attribute name="id" type="NestedIDType" use="required" />
        <xs:attribute name="version" type="VersionType" use="prohibited" />
        <xs:attribute fixed="false" name="local" type="xs:boolean" use="optional" />
        <xs:attribute name="class" type="ObjectTypeCodelistType" use="optional" />
        <xs:attribute name="package" type="PackageTypeCodelistType" use="optional" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="ContainerChildObjectRefBaseType" abstract="true">
    <xs:annotation>
      <xs:documentation>ContainerChildObjectRefBaseType is an abstract base type for referencing any child object within container defined in a maintainable object.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="RefBaseType">
        <xs:attribute name="agencyID" type="NestedNCNameIDType" use="required" />
        <xs:attribute name="maintainableParentID" type="IDType" use="required" />
        <xs:attribute default="1.0" name="maintainableParentVersion" type="VersionType" use="optional" />
        <xs:attribute name="containerID" type="NestedIDType" use="optional" />
        <xs:attribute name="id" type="NestedIDType" use="required" />
        <xs:attribute fixed="false" name="local" type="xs:boolean" use="optional" />
        <xs:attribute name="class" type="ObjectTypeCodelistType" use="optional" />
        <xs:attribute name="package" type="PackageTypeCodelistType" use="optional" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="ItemRefBaseType" abstract="true">
    <xs:annotation>
      <xs:documentation>ItemRefBaseType is an abstract base type for referencing an item within an item scheme.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="ChildObjectRefBaseType">
        <xs:attribute name="agencyID" type="NestedNCNameIDType" use="required" />
        <xs:attribute name="maintainableParentID" type="IDType" use="required">
          <xs:annotation>
            <xs:documentation>The maintainableParentID references the item scheme in which the item being referenced is defined.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute default="1.0" name="maintainableParentVersion" type="VersionType" use="optional">
          <xs:annotation>
            <xs:documentation>The maintainableParentVersion attribute references the version of the item scheme in which the item being referenced is defined. If not supplied, a default value of 1.0 is assumed.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="id" type="NestedIDType" use="required" />
        <xs:attribute fixed="false" name="local" type="xs:boolean" use="optional" />
        <xs:attribute name="class" type="ItemTypeCodelistType" use="optional" />
        <xs:attribute name="package" type="ItemSchemePackageTypeCodelistType" use="optional" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="ComponentListRefBaseType" abstract="true">
    <xs:annotation>
      <xs:documentation>ComponentListRefBaseType is an abstract base type for referencing a component list within a structure.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="ChildObjectRefBaseType">
        <xs:attribute name="agencyID" type="NestedNCNameIDType" use="required" />
        <xs:attribute name="maintainableParentID" type="IDType" use="required">
          <xs:annotation>
            <xs:documentation>The maintainableParentID references the structure in which the component list being referenced is defined.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute default="1.0" name="maintainableParentVersion" type="VersionType" use="optional">
          <xs:annotation>
            <xs:documentation>The maintainableParentVersion attribute references the version of the structure in which the component list being referenced is defined. If not supplied, a default value of 1.0 is assumed.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="id" type="IDType" use="required" />
        <xs:attribute fixed="false" name="local" type="xs:boolean" use="optional" />
        <xs:attribute name="class" type="ComponentListTypeCodelistType" use="optional" />
        <xs:attribute name="package" type="StructurePackageTypeCodelistType" use="optional" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="ComponentRefBaseType" abstract="true">
    <xs:annotation>
      <xs:documentation>ComponentRefBaseType is an abstract base type for referencing a component contained in a component list within a structure.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="ContainerChildObjectRefBaseType">
        <xs:attribute name="agencyID" type="NestedNCNameIDType" use="required" />
        <xs:attribute name="maintainableParentID" type="IDType" use="required">
          <xs:annotation>
            <xs:documentation>The maintainableParentID references the structure in which the component being referenced is defined.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute default="1.0" name="maintainableParentVersion" type="VersionType" use="optional">
          <xs:annotation>
            <xs:documentation>The maintainableParentVersion attribute references the version of the structure in which the component being referenced is defined. If not supplied, a default value of 1.0 is assumed.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="containerID" type="NestedIDType" use="optional">
          <xs:annotation>
            <xs:documentation>The containerID attribute references the component list of that contains the component being referenced. It is optional for the cases where the component list has a fixed identifier. Specific implementations of this will prohibit or require this accordingly.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="id" type="NestedIDType" use="required" />
        <xs:attribute fixed="false" name="local" type="xs:boolean" use="optional" />
        <xs:attribute name="class" type="ComponentTypeCodelistType" use="optional" />
        <xs:attribute name="package" type="StructurePackageTypeCodelistType" use="optional" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="AnyCodelistRefType">
    <xs:annotation>
      <xs:documentation>AnyCodelistRefType is a type for referencing any codelist object (either a codelist or a hierarchical codelist).</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="MaintainableRefBaseType">
        <xs:attribute name="class" type="CodelistTypeCodelistType" use="required" />
        <xs:attribute fixed="codelist" name="package" type="PackageTypeCodelistType" use="optional" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="StructureOrUsageRefType">
    <xs:annotation>
      <xs:documentation>StructureOrUsageRefType is a type for referencing a structure or structure usage.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="StructureOrUsageRefBaseType">
        <xs:attribute name="class" type="StructureOrUsageTypeCodelistType" use="required" />
        <xs:attribute name="package" type="StructurePackageTypeCodelistType" use="required" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="LocalIdentifiableRefBaseType" abstract="true">
    <xs:annotation>
      <xs:documentation>LocalIdentifiableRefBaseType is an abstract base type which provides a local reference to any identifiable object.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="RefBaseType">
        <xs:attribute name="agencyID" type="NestedNCNameIDType" use="prohibited" />
        <xs:attribute name="maintainableParentID" type="IDType" use="prohibited" />
        <xs:attribute name="maintainableParentVersion" type="VersionType" use="prohibited" />
        <xs:attribute name="containerID" type="NestedIDType" use="optional" />
        <xs:attribute name="id" type="NestedIDType" use="required" />
        <xs:attribute name="version" type="VersionType" use="prohibited" />
        <xs:attribute fixed="true" name="local" type="xs:boolean" use="optional" />
        <xs:attribute name="class" type="ObjectTypeCodelistType" use="optional" />
        <xs:attribute name="package" type="PackageTypeCodelistType" use="optional" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="LocalItemRefBaseType" abstract="true">
    <xs:annotation>
      <xs:documentation>LocalItemRefBaseType is an abstract base type which provides a local reference to a item object.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="LocalIdentifiableRefBaseType">
        <xs:attribute name="containerID" type="NestedIDType" use="prohibited" />
        <xs:attribute name="id" type="NestedIDType" use="required" />
        <xs:attribute name="class" type="ItemTypeCodelistType" use="optional" />
        <xs:attribute name="package" type="ItemSchemePackageTypeCodelistType" use="optional" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="LocalComponentListRefBaseType" abstract="true">
    <xs:annotation>
      <xs:documentation>LocalComponentListRefBaseType is an abstract base type which provides a local reference to a component list object.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="LocalIdentifiableRefBaseType">
        <xs:attribute name="containerID" type="NestedIDType" use="prohibited" />
        <xs:attribute name="class" type="ComponentListTypeCodelistType" use="optional" />
        <xs:attribute name="package" type="StructurePackageTypeCodelistType" use="optional" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="LocalComponentListComponentRefBaseType" abstract="true">
    <xs:annotation>
      <xs:documentation>LocalComponentRefBaseType is an abstract base type which provides a local reference to a component object.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="LocalIdentifiableRefBaseType">
        <xs:attribute name="containerID" type="IDType" use="optional" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="LocalComponentListComponentRefType">
    <xs:annotation>
      <xs:documentation>LocalComponentListComponentRefType provides a local reference to any component object within a specific component list. References for both of these are required as well as an indication of which type of type of component is being referenced via the class attribute.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="LocalComponentListComponentRefBaseType">
        <xs:attribute name="containerID" type="IDType" use="required" />
        <xs:attribute name="id" type="NestedIDType" use="required" />
        <xs:attribute fixed="true" name="local" type="xs:boolean" use="optional" />
        <xs:attribute name="class" type="ComponentTypeCodelistType" use="required" />
        <xs:attribute name="package" type="StructurePackageTypeCodelistType" use="required" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="LocalComponentRefBaseType" abstract="true">
    <xs:annotation>
      <xs:documentation>LocalComponentRefBaseType is an abstract base type which provides a local reference to a component object.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="LocalComponentListComponentRefBaseType">
        <xs:attribute name="containerID" type="IDType" use="prohibited" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="LocalComponentRefType">
    <xs:annotation>
      <xs:documentation>LocalComponentRefType provides a local reference to any type component object.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="LocalComponentRefBaseType">
        <xs:attribute name="class" type="ComponentTypeCodelistType" use="required" />
        <xs:attribute name="package" type="StructurePackageTypeCodelistType" use="required" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="AnyLocalCodeRefType">
    <xs:annotation>
      <xs:documentation>AnyLocalCodeRefType provides a local reference to any code object.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="RefBaseType">
        <xs:attribute name="agencyID" type="NestedNCNameIDType" use="prohibited" />
        <xs:attribute name="maintainableParentID" type="IDType" use="prohibited" />
        <xs:attribute name="maintainableParentVersion" type="VersionType" use="prohibited" />
        <xs:attribute name="containerID" type="IDType" use="optional">
          <xs:annotation>
            <xs:documentation>The containerID attribute references the hierarchy which defines the hierarchical code in the case that this reference is for a hierarchical code.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="id" type="NestedIDType" use="required" />
        <xs:attribute fixed="true" name="local" type="xs:boolean" use="optional" />
        <xs:attribute name="class" type="CodeTypeCodelistType" use="optional" />
        <xs:attribute fixed="codelist" name="package" type="PackageTypeCodelistType" use="optional" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="URNReferenceType">
    <xs:annotation>
      <xs:documentation>URNReferenceType is a type referencing any object via its URN. The exact type of object is not specified, although it can be determined from the URN value.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="ReferenceType">
        <xs:sequence>
          <xs:element form="unqualified" name="URN" type="xs:anyURI" />
        </xs:sequence>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="MaintainableReferenceBaseType" abstract="true">
    <xs:annotation>
      <xs:documentation>MaintainableReferenceBaseType is an abstract base type for referencing a maintainable object. It consists of a URN and/or a complete set of reference fields; agency, id, and version.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="ReferenceType">
        <xs:choice>
          <xs:sequence>
            <xs:element form="unqualified" name="Ref" type="MaintainableRefBaseType" />
            <xs:element minOccurs="0" form="unqualified" name="URN" type="xs:anyURI" />
          </xs:sequence>
          <xs:element form="unqualified" name="URN" type="xs:anyURI" />
        </xs:choice>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="MaintainableReferenceType">
    <xs:annotation>
      <xs:documentation>MaintainableReferenceType is a type for referencing any maintainable object. It consists of a URN and/or a complete set of reference fields; agency, id, and version.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="MaintainableReferenceBaseType">
        <xs:choice>
          <xs:sequence>
            <xs:element form="unqualified" name="Ref" type="MaintainableRefType" />
            <xs:element minOccurs="0" form="unqualified" name="URN" type="xs:anyURI" />
          </xs:sequence>
          <xs:element form="unqualified" name="URN" type="xs:anyURI" />
        </xs:choice>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="LocalIdentifiableReferenceType" abstract="true">
    <xs:annotation>
      <xs:documentation>LocalIdentifiableReferenceType is an abstract base type for referencing an identifiable object locally, where the maintainable object in which it is defined is referenced in another context..</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="ReferenceType">
        <xs:sequence>
          <xs:element form="unqualified" name="Ref" type="LocalIdentifiableRefBaseType" />
        </xs:sequence>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="StructureReferenceBaseType" abstract="true">
    <xs:annotation>
      <xs:documentation>StructureReferneceBaseType is a specific type of MaintainableReference that is used for referencing structure definitions. It consists of a URN and/or a complete set of reference fields; agency, id, and version.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="MaintainableReferenceBaseType">
        <xs:choice>
          <xs:sequence>
            <xs:element form="unqualified" name="Ref" type="StructureRefBaseType" />
            <xs:element minOccurs="0" form="unqualified" name="URN" type="xs:anyURI" />
          </xs:sequence>
          <xs:element form="unqualified" name="URN" type="xs:anyURI" />
        </xs:choice>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="StructureReferenceType">
    <xs:annotation>
      <xs:documentation>StructureReferenceType is a specific type of MaintainableReference that is used for referencing any structure. It consists of a URN and/or a complete set of reference fields; agency, id, and version.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="StructureReferenceBaseType">
        <xs:choice>
          <xs:sequence>
            <xs:element form="unqualified" name="Ref" type="StructureRefType" />
            <xs:element minOccurs="0" form="unqualified" name="URN" type="xs:anyURI" />
          </xs:sequence>
          <xs:element form="unqualified" name="URN" type="xs:anyURI" />
        </xs:choice>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="StructureUsageReferenceBaseType" abstract="true">
    <xs:annotation>
      <xs:documentation>StructureUsageReferenceBaseType is a specific type of MaintainableReference that is used for referencing structure usages. It consists of a URN and/or a complete set of reference fields; agency, id, and version.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="MaintainableReferenceBaseType">
        <xs:choice>
          <xs:sequence>
            <xs:element form="unqualified" name="Ref" type="StructureUsageRefBaseType" />
            <xs:element minOccurs="0" form="unqualified" name="URN" type="xs:anyURI" />
          </xs:sequence>
          <xs:element form="unqualified" name="URN" type="xs:anyURI" />
        </xs:choice>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="StructureUsageReferenceType">
    <xs:annotation>
      <xs:documentation>StructureUsageReferenceType is a specific type of MaintainableReference that is used for referencing any structure usages. It consists of a URN and/or a complete set of reference fields; agency, id, and version.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="StructureUsageReferenceBaseType">
        <xs:choice>
          <xs:sequence>
            <xs:element form="unqualified" name="Ref" type="StructureUsageRefType" />
            <xs:element minOccurs="0" form="unqualified" name="URN" type="xs:anyURI" />
          </xs:sequence>
          <xs:element form="unqualified" name="URN" type="xs:anyURI" />
        </xs:choice>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="ItemSchemeReferenceBaseType" abstract="true">
    <xs:annotation>
      <xs:documentation>ItemSchemeReferenceBaseType is a specific type of MaintainableReference that is used for referencing item schemes. It consists of a URN and/or a complete set of reference fields; agency, id, and version.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="MaintainableReferenceBaseType">
        <xs:choice>
          <xs:sequence>
            <xs:element form="unqualified" name="Ref" type="ItemSchemeRefBaseType" />
            <xs:element minOccurs="0" form="unqualified" name="URN" type="xs:anyURI" />
          </xs:sequence>
          <xs:element form="unqualified" name="URN" type="xs:anyURI" />
        </xs:choice>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="ItemSchemeReferenceType">
    <xs:annotation>
      <xs:documentation>ItemSchemeReferenceType is a reference that is used for referencing any type of item scheme. It consists of a URN and/or a complete set of reference fields; agency, id, and version.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="ItemSchemeReferenceBaseType">
        <xs:choice>
          <xs:sequence>
            <xs:element form="unqualified" name="Ref" type="ItemSchemeRefType" />
            <xs:element minOccurs="0" form="unqualified" name="URN" type="xs:anyURI" />
          </xs:sequence>
          <xs:element form="unqualified" name="URN" type="xs:anyURI" />
        </xs:choice>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="ChildObjectReferenceType" abstract="true">
    <xs:annotation>
      <xs:documentation>ChildObjectReferenceType is an abstract base type used for referencing a particular object defined directly within a maintainable object. It consists of a URN and/or a complete set of reference fields; agency, maintainable id (maintainableParentID), maintainable version (maintainableParentVersion), the object id (which can be nested), and optionally the object version (if applicable).</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="ReferenceType">
        <xs:choice>
          <xs:sequence>
            <xs:element form="unqualified" name="Ref" type="ChildObjectRefBaseType" />
            <xs:element minOccurs="0" form="unqualified" name="URN" type="xs:anyURI" />
          </xs:sequence>
          <xs:element form="unqualified" name="URN" type="xs:anyURI" />
        </xs:choice>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="ContainerChildObjectReferenceType" abstract="true">
    <xs:annotation>
      <xs:documentation>ContainerChildObjectReferenceType is an abstract base type used for referencing a particular object defined in a container object within a maintainable object. It consists of a URN and/or a complete set of reference fields; agency, maintainable id (maintainableParentID), maintainable version (maintainableParentVersion), container id (which is optional in order to allow for containers with fixed values to be omitted), container version (if applicable), the object id (which can be nested), and optionally the object version (if applicable).</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="ReferenceType">
        <xs:choice>
          <xs:sequence>
            <xs:element form="unqualified" name="Ref" type="ContainerChildObjectRefBaseType" />
            <xs:element minOccurs="0" form="unqualified" name="URN" type="xs:anyURI" />
          </xs:sequence>
          <xs:element form="unqualified" name="URN" type="xs:anyURI" />
        </xs:choice>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="ItemReferenceType" abstract="true">
    <xs:annotation>
      <xs:documentation>ItemReferenceType is an abstract base type used for referencing a particular item within an item scheme. Note that this reference also has the ability to reference items contained within other items inside of the item scheme. It consists of a URN and/or a complete set of reference fields; agency, scheme id (maintainableParentID), scheme version (maintainableParentVersion), and item id (which can be nested).</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="ChildObjectReferenceType">
        <xs:choice>
          <xs:sequence>
            <xs:element form="unqualified" name="Ref" type="ItemRefBaseType" />
            <xs:element minOccurs="0" form="unqualified" name="URN" type="xs:anyURI" />
          </xs:sequence>
          <xs:element form="unqualified" name="URN" type="xs:anyURI" />
        </xs:choice>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="ComponentListReferenceType" abstract="true">
    <xs:annotation>
      <xs:documentation>ComponentListReferenceType is an abstract base type used for referencing component lists within a structure. It consists of a URN and/or a complete set of reference fields (structure agency, structure id, structure version, and component list id).</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="ChildObjectReferenceType">
        <xs:choice>
          <xs:sequence>
            <xs:element form="unqualified" name="Ref" type="ComponentListRefBaseType" />
            <xs:element minOccurs="0" form="unqualified" name="URN" type="xs:anyURI" />
          </xs:sequence>
          <xs:element form="unqualified" name="URN" type="xs:anyURI" />
        </xs:choice>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="ComponentReferenceType" abstract="true">
    <xs:annotation>
      <xs:documentation>ComponentReferenceType is an abstract base type used for referencing components within a structure definition. It consists of a URN and/or a complete set of reference fields (structure agency, structure id, structure version, component list id, and component id).</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="ContainerChildObjectReferenceType">
        <xs:choice>
          <xs:sequence>
            <xs:element form="unqualified" name="Ref" type="ComponentRefBaseType" />
            <xs:element minOccurs="0" form="unqualified" name="URN" type="xs:anyURI" />
          </xs:sequence>
          <xs:element form="unqualified" name="URN" type="xs:anyURI" />
        </xs:choice>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="LocalItemReferenceType" abstract="true">
    <xs:annotation>
      <xs:documentation>LocalItemReferenceType is an abstract base type which provides a simple reference to an item where the reference to the item scheme which defines it are provided in another context.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="ReferenceType">
        <xs:sequence>
          <xs:element form="unqualified" name="Ref" type="LocalItemRefBaseType" />
        </xs:sequence>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="LocalComponentListReferenceType" abstract="true">
    <xs:annotation>
      <xs:documentation>LocalComponentListReferenceType is an abstract base type which provides a simple reference to a component list where the reference to the structure which defines it is provided in another context.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="ReferenceType">
        <xs:sequence>
          <xs:element form="unqualified" name="Ref" type="LocalComponentListRefBaseType" />
        </xs:sequence>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="LocalComponentListComponentReferenceBaseType" abstract="true">
    <xs:annotation>
      <xs:documentation>LocalComponentListComponentReferenceBaseType is an abstract base type which provides a simple reference to any type of component in a specific component list where the reference to the structure which defines it are provided in another context, and the component list may or may not be defined in another context.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="ReferenceType">
        <xs:sequence>
          <xs:element form="unqualified" name="Ref" type="LocalComponentListComponentRefBaseType" />
        </xs:sequence>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="LocalComponentListComponentReferenceType">
    <xs:annotation>
      <xs:documentation>LocalComponentListComponentReferenceType provides a simple reference to any type of component in a specific component list where the reference to the structure which defines it are provided in another context.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="LocalComponentListComponentReferenceBaseType">
        <xs:sequence>
          <xs:element form="unqualified" name="Ref" type="LocalComponentListComponentRefType" />
        </xs:sequence>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="LocalComponentReferenceBaseType" abstract="true">
    <xs:annotation>
      <xs:documentation>LocalComponentReferenceBaseType is an abstract base type which provides a simple reference to a component where the references to the component list which contains it and the structure which defines it are provided in another context.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="LocalComponentListComponentReferenceBaseType">
        <xs:sequence>
          <xs:element form="unqualified" name="Ref" type="LocalComponentRefBaseType" />
        </xs:sequence>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="LocalComponentReferenceType">
    <xs:annotation>
      <xs:documentation>LocalComponentReferenceType provides a simple reference to any type of component in a component list where the references to the component list and the structure which defines them are provided in another context.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="LocalComponentListComponentReferenceBaseType">
        <xs:sequence>
          <xs:element form="unqualified" name="Ref" type="LocalComponentRefType" />
        </xs:sequence>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="StructureOrUsageReferenceType">
    <xs:annotation>
      <xs:documentation>StructureOrUsageReferenceType is a specific type of a reference for referencing either a structure or a structure usage. It consists of a URN and/or a complete set of reference fields; agency, id and version. If the complete set of reference fields is used, it is required that a class and package be provided so that the type of object referenced is clear.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="MaintainableReferenceBaseType">
        <xs:choice>
          <xs:sequence>
            <xs:element form="unqualified" name="Ref" type="StructureOrUsageRefType" />
            <xs:element minOccurs="0" form="unqualified" name="URN" type="xs:anyURI" />
          </xs:sequence>
          <xs:element form="unqualified" name="URN" type="xs:anyURI" />
        </xs:choice>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="CategorisationReferenceType">
    <xs:annotation>
      <xs:documentation>CategorisationReferenceType is a type for referencing a categorisation object. It consists of a URN and/or a complete set of reference fields.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="MaintainableReferenceBaseType">
        <xs:choice>
          <xs:sequence>
            <xs:element form="unqualified" name="Ref" type="CategorisationRefType" />
            <xs:element minOccurs="0" form="unqualified" name="URN" type="xs:anyURI" />
          </xs:sequence>
          <xs:element form="unqualified" name="URN" type="xs:anyURI" />
        </xs:choice>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="CategorisationRefType">
    <xs:annotation>
      <xs:documentation>CategorisationRefType provides a reference to a categorisation via a complete set of reference fields.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="MaintainableRefBaseType">
        <xs:attribute fixed="Categorisation" name="class" type="MaintainableTypeCodelistType" use="optional" />
        <xs:attribute fixed="categoryscheme" name="package" type="PackageTypeCodelistType" use="optional" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="CategorySchemeReferenceType">
    <xs:annotation>
      <xs:documentation>CategorySchemeReferenceType is a type for referencing a category scheme object. It consists of a URN and/or a complete set of reference fields.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="ItemSchemeReferenceBaseType">
        <xs:choice>
          <xs:sequence>
            <xs:element form="unqualified" name="Ref" type="CategorySchemeRefType" />
            <xs:element minOccurs="0" form="unqualified" name="URN" type="xs:anyURI" />
          </xs:sequence>
          <xs:element form="unqualified" name="URN" type="xs:anyURI" />
        </xs:choice>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="CategorySchemeRefType">
    <xs:annotation>
      <xs:documentation>CategorySchemeRefType provides a reference to a category scheme via a complete set of reference fields.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="ItemSchemeRefBaseType">
        <xs:attribute fixed="CategoryScheme" name="class" type="ItemSchemeTypeCodelistType" use="optional" />
        <xs:attribute fixed="categoryscheme" name="package" type="ItemSchemePackageTypeCodelistType" use="optional" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="CategoryReferenceType">
    <xs:annotation>
      <xs:documentation>CategoryReferenceType is a type for referencing a category object. It consists of a URN and/or a complete set of reference fields.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="ItemReferenceType">
        <xs:choice>
          <xs:sequence>
            <xs:element form="unqualified" name="Ref" type="CategoryRefType" />
            <xs:element minOccurs="0" form="unqualified" name="URN" type="xs:anyURI" />
          </xs:sequence>
          <xs:element form="unqualified" name="URN" type="xs:anyURI" />
        </xs:choice>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="CategoryRefType">
    <xs:annotation>
      <xs:documentation>CategoryRefType references a category from within a category scheme. Reference fields are required for both the scheme and the item.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="ItemRefBaseType">
        <xs:attribute name="maintainableParentID" type="IDType" use="required">
          <xs:annotation>
            <xs:documentation>The maintainableParentID references the category scheme in which the category being referenced is defined.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute default="1.0" name="maintainableParentVersion" type="VersionType" use="optional">
          <xs:annotation>
            <xs:documentation>The maintainableParentVersion attribute references the version of the category scheme in which the category being referenced is defined. If not supplied, a default value of 1.0 is assumed.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute fixed="Category" name="class" type="ItemTypeCodelistType" use="optional" />
        <xs:attribute fixed="categoryscheme" name="package" type="ItemSchemePackageTypeCodelistType" use="optional" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="LocalCategoryReferenceType">
    <xs:annotation>
      <xs:documentation>LocalCategoryReferenceType provides a simple references to a category where the identification of the category scheme which defines it is contained in another context.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="LocalItemReferenceType">
        <xs:sequence>
          <xs:element form="unqualified" name="Ref" type="LocalCategoryRefType" />
        </xs:sequence>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="LocalCategoryRefType">
    <xs:annotation>
      <xs:documentation>LocalCategoryRefType references a category locally where the references to the category scheme which defines it is provided elsewhere.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="LocalItemRefBaseType">
        <xs:attribute fixed="Category" name="class" type="ItemTypeCodelistType" use="optional" />
        <xs:attribute fixed="categoryscheme" name="package" type="ItemSchemePackageTypeCodelistType" use="optional" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="CodelistReferenceType">
    <xs:annotation>
      <xs:documentation>CodelistReferenceType is a type for referencing a codelist object. It consists of a URN and/or a complete set of reference fields.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="ItemSchemeReferenceBaseType">
        <xs:choice>
          <xs:sequence>
            <xs:element form="unqualified" name="Ref" type="CodelistRefType" />
            <xs:element minOccurs="0" form="unqualified" name="URN" type="xs:anyURI" />
          </xs:sequence>
          <xs:element form="unqualified" name="URN" type="xs:anyURI" />
        </xs:choice>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="CodelistRefType">
    <xs:annotation>
      <xs:documentation>CodelistRefType provides a reference to a codelist via a complete set of reference fields.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="ItemSchemeRefBaseType">
        <xs:attribute fixed="Codelist" name="class" type="ItemSchemeTypeCodelistType" use="optional" />
        <xs:attribute fixed="codelist" name="package" type="ItemSchemePackageTypeCodelistType" use="optional" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="CodeReferenceType">
    <xs:annotation>
      <xs:documentation>CodeReferenceType is a type for referencing a code object. It consists of a URN and/or a complete set of reference fields.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="ItemReferenceType">
        <xs:choice>
          <xs:sequence>
            <xs:element form="unqualified" name="Ref" type="CodeRefType" />
            <xs:element minOccurs="0" form="unqualified" name="URN" type="xs:anyURI" />
          </xs:sequence>
          <xs:element form="unqualified" name="URN" type="xs:anyURI" />
        </xs:choice>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="CodeRefType">
    <xs:annotation>
      <xs:documentation>CodeRefType references a code from within a codelist. Reference fields are required for both the scheme and the item.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="ItemRefBaseType">
        <xs:attribute name="maintainableParentID" type="IDType" use="required">
          <xs:annotation>
            <xs:documentation>The maintainableParentID references the codelist in which the code being referenced is defined.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute default="1.0" name="maintainableParentVersion" type="VersionType" use="optional">
          <xs:annotation>
            <xs:documentation>The maintainableParentVersion attribute references the version of the codelist in which the code being referenced is defined. If not supplied, a default value of 1.0 is assumed.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="id" type="IDType" use="required" />
        <xs:attribute fixed="Code" name="class" type="ItemTypeCodelistType" use="optional" />
        <xs:attribute fixed="codelist" name="package" type="ItemSchemePackageTypeCodelistType" use="optional" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="LocalCodeReferenceType">
    <xs:annotation>
      <xs:documentation>LocalCodeReferenceType provides a simple references to a code where the identification of the codelist which defines it is contained in another context.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="LocalItemReferenceType">
        <xs:sequence>
          <xs:element form="unqualified" name="Ref" type="LocalCodeRefType" />
        </xs:sequence>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="LocalCodeRefType">
    <xs:annotation>
      <xs:documentation>LocalCodeRefType references a code locally where the references to the codelist which defines it is provided elsewhere.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="LocalItemRefBaseType">
        <xs:attribute name="id" type="IDType" use="required" />
        <xs:attribute fixed="Code" name="class" type="ItemTypeCodelistType" use="optional" />
        <xs:attribute fixed="codelist" name="package" type="ItemSchemePackageTypeCodelistType" use="optional" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="AnyCodelistReferenceType">
    <xs:annotation>
      <xs:documentation>AnyCodelistReferenceType is a specific type of a reference for referencing either a codelist or a hierarchical codelist usage. It consists of a URN and/or a complete set of reference fields; agency, id and version. If the complete set of reference fields is used, it is required that a class be provided so that the type of object referenced is clear.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="MaintainableReferenceBaseType">
        <xs:choice>
          <xs:sequence>
            <xs:element form="unqualified" name="Ref" type="AnyCodelistRefType" />
            <xs:element minOccurs="0" form="unqualified" name="URN" type="xs:anyURI" />
          </xs:sequence>
          <xs:element form="unqualified" name="URN" type="xs:anyURI" />
        </xs:choice>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="AnyLocalCodeReferenceType">
    <xs:annotation>
      <xs:documentation>AnyLocalCodeReferenceType provides a simple references to any code or hierarchical code where the identification of the codelist or hierarchical codelist which defines it is contained in another context.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="ReferenceType">
        <xs:choice>
          <xs:sequence>
            <xs:element form="unqualified" name="Ref" type="AnyLocalCodeRefType" />
            <xs:element minOccurs="0" form="unqualified" name="URN" type="xs:anyURI" />
          </xs:sequence>
          <xs:element form="unqualified" name="URN" type="xs:anyURI" />
        </xs:choice>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="ConceptSchemeReferenceType">
    <xs:annotation>
      <xs:documentation>ConceptSchemeReferenceType is a type for referencing a concept scheme object. It consists of a URN and/or a complete set of reference fields.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="ItemSchemeReferenceBaseType">
        <xs:choice>
          <xs:sequence>
            <xs:element form="unqualified" name="Ref" type="ConceptSchemeRefType" />
            <xs:element minOccurs="0" form="unqualified" name="URN" type="xs:anyURI" />
          </xs:sequence>
          <xs:element form="unqualified" name="URN" type="xs:anyURI" />
        </xs:choice>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="ConceptSchemeRefType">
    <xs:annotation>
      <xs:documentation>ConceptSchemeRefType provides a reference to a concept scheme via a complete set of reference fields.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="ItemSchemeRefBaseType">
        <xs:attribute fixed="ConceptScheme" name="class" type="ItemSchemeTypeCodelistType" use="optional" />
        <xs:attribute fixed="conceptscheme" name="package" type="ItemSchemePackageTypeCodelistType" use="optional" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="ConceptReferenceType">
    <xs:annotation>
      <xs:documentation>ConceptReferenceType is a type for referencing a concept object. It consists of a URN and/or a complete set of reference fields.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="ItemReferenceType">
        <xs:choice>
          <xs:sequence>
            <xs:element form="unqualified" name="Ref" type="ConceptRefType" />
            <xs:element minOccurs="0" form="unqualified" name="URN" type="xs:anyURI" />
          </xs:sequence>
          <xs:element form="unqualified" name="URN" type="xs:anyURI" />
        </xs:choice>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="ConceptRefType">
    <xs:annotation>
      <xs:documentation>ConceptRefType references a concept from within a concept scheme. Reference fields are required for both the scheme and the item.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="ItemRefBaseType">
        <xs:attribute name="maintainableParentID" type="IDType" use="required">
          <xs:annotation>
            <xs:documentation>The maintainableParentID references the concept scheme in which the concept being referenced is defined.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute default="1.0" name="maintainableParentVersion" type="VersionType" use="optional">
          <xs:annotation>
            <xs:documentation>The maintainableParentVersion attribute references the version of the concept scheme in which the concept being referenced is defined. If not supplied, a default value of 1.0 is assumed.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="id" type="IDType" use="required" />
        <xs:attribute fixed="Concept" name="class" type="ItemTypeCodelistType" use="optional" />
        <xs:attribute fixed="conceptscheme" name="package" type="ItemSchemePackageTypeCodelistType" use="optional" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="LocalConceptReferenceType">
    <xs:annotation>
      <xs:documentation>LocalConceptReferenceType provides a simple references to a concept where the identification of the concept scheme which defines it is contained in another context.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="LocalItemReferenceType">
        <xs:sequence>
          <xs:element form="unqualified" name="Ref" type="LocalConceptRefType" />
        </xs:sequence>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="LocalConceptRefType">
    <xs:annotation>
      <xs:documentation>LocalConceptRefType references a concept locally where the references to the concept scheme which defines it is provided elsewhere.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="LocalItemRefBaseType">
        <xs:attribute name="id" type="IDType" use="required" />
        <xs:attribute fixed="Concept" name="class" type="ItemTypeCodelistType" use="optional" />
        <xs:attribute fixed="conceptscheme" name="package" type="ItemSchemePackageTypeCodelistType" use="optional" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="OrganisationSchemeReferenceBaseType" abstract="true">
    <xs:annotation>
      <xs:documentation>OrganisationSchemeReferenceBaseType is a type for referencing a organisation scheme object. It consists of a URN and/or a complete set of reference fields.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="ItemSchemeReferenceBaseType">
        <xs:choice>
          <xs:sequence>
            <xs:element form="unqualified" name="Ref" type="OrganisationSchemeRefBaseType" />
            <xs:element minOccurs="0" form="unqualified" name="URN" type="xs:anyURI" />
          </xs:sequence>
          <xs:element form="unqualified" name="URN" type="xs:anyURI" />
        </xs:choice>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="OrganisationSchemeRefBaseType" abstract="true">
    <xs:annotation>
      <xs:documentation>OrganisationSchemeRefBaseType contains a set of reference fields for an organisation scheme.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="ItemSchemeRefBaseType">
        <xs:attribute name="class" type="OrganisationSchemeTypeCodelistType" use="optional" />
        <xs:attribute fixed="base" name="package" type="ItemSchemePackageTypeCodelistType" use="optional" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="OrganisationSchemeReferenceType">
    <xs:annotation>
      <xs:documentation>OrganisationSchemeReferenceType references an organisation scheme regardless of the specific type. It consists of a URN and/or a complete set of reference fields.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="OrganisationSchemeReferenceBaseType">
        <xs:choice>
          <xs:sequence>
            <xs:element form="unqualified" name="Ref" type="OrganisationSchemeRefType" />
            <xs:element minOccurs="0" form="unqualified" name="URN" type="xs:anyURI" />
          </xs:sequence>
          <xs:element form="unqualified" name="URN" type="xs:anyURI" />
        </xs:choice>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="OrganisationSchemeRefType">
    <xs:annotation>
      <xs:documentation>OrganisationSchemeRefType provides a reference to an organisation scheme via a complete set of reference fields. It is required that the class (i.e. the type) of organisation scheme being referenced be specified.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="OrganisationSchemeRefBaseType">
        <xs:attribute name="class" type="OrganisationSchemeTypeCodelistType" use="required" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="OrganisationReferenceBaseType" abstract="true">
    <xs:annotation>
      <xs:documentation>OrganisationReferenceBaseType is a type for referencing any organisation object, regardless of its type. It consists of a URN and/or a complete set of reference fields.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="ItemReferenceType">
        <xs:choice>
          <xs:sequence>
            <xs:element form="unqualified" name="Ref" type="OrganisationRefBaseType" />
            <xs:element minOccurs="0" form="unqualified" name="URN" type="xs:anyURI" />
          </xs:sequence>
          <xs:element form="unqualified" name="URN" type="xs:anyURI" />
        </xs:choice>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="OrganisationRefBaseType" abstract="true">
    <xs:annotation>
      <xs:documentation>OrganisationRefBaseType is an abstract base type which references an organisation from within a organisation scheme. Reference fields are required for both the scheme and the organisation.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="ItemRefBaseType">
        <xs:attribute name="maintainableParentID" type="IDType" use="required">
          <xs:annotation>
            <xs:documentation>The maintainableParentID references the organisation scheme in which the organisation being referenced is defined.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute default="1.0" name="maintainableParentVersion" type="VersionType" use="optional">
          <xs:annotation>
            <xs:documentation>The maintainableParentVersion attribute references the version of the organisation scheme in which the organisation being referenced is defined. If not supplied, a default value of 1.0 is assumed.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="id" type="IDType" use="required" />
        <xs:attribute name="class" type="OrganisationTypeCodelistType" use="optional" />
        <xs:attribute fixed="base" name="package" type="ItemSchemePackageTypeCodelistType" use="optional" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="OrganisationReferenceType">
    <xs:annotation>
      <xs:documentation>OrganisationReferenceType references an organisation regardless of the specific type. It consists of a URN and/or a complete set of reference fields.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="OrganisationReferenceBaseType">
        <xs:choice>
          <xs:sequence>
            <xs:element form="unqualified" name="Ref" type="OrganisationRefBaseType" />
            <xs:element minOccurs="0" form="unqualified" name="URN" type="xs:anyURI" />
          </xs:sequence>
          <xs:element form="unqualified" name="URN" type="xs:anyURI" />
        </xs:choice>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="OrganisationRefType">
    <xs:annotation>
      <xs:documentation>OrganisationRefType provides a reference to any organisation via a complete set of reference fields. It is required that the class (i.e. the type) of organisation being referenced be specified.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="OrganisationRefBaseType">
        <xs:attribute name="class" type="OrganisationTypeCodelistType" use="required" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="LocalOrganisationReferenceBaseType" abstract="true">
    <xs:annotation>
      <xs:documentation>LocalOrganisationReferenceBaseType is an abstract base type which provides a simple references to an organisation, regardless of type, where the identification of the organisation scheme which defines it is contained in another context.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="LocalItemReferenceType">
        <xs:sequence>
          <xs:element form="unqualified" name="Ref" type="LocalOrganisationRefBaseType" />
        </xs:sequence>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="LocalOrganisationRefBaseType" abstract="true">
    <xs:annotation>
      <xs:documentation>LocalOrganisationRefBaseType is an abstract base type that references an organisation locally where the reference to the organisation scheme which defines it is provided elsewhere.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="LocalItemRefBaseType">
        <xs:attribute name="id" type="IDType" use="required" />
        <xs:attribute name="class" type="OrganisationTypeCodelistType" use="optional" />
        <xs:attribute fixed="base" name="package" type="ItemSchemePackageTypeCodelistType" use="optional" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="LocalOrganisationReferenceType">
    <xs:annotation>
      <xs:documentation>LocalOrganisationReferenceType provides a simple reference to an organisation, regardless of type, where the identification of the organisation scheme which defines it is contained in another context.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="LocalOrganisationReferenceBaseType">
        <xs:sequence>
          <xs:element form="unqualified" name="Ref" type="LocalOrganisationRefType" />
        </xs:sequence>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="LocalOrganisationRefType">
    <xs:annotation>
      <xs:documentation>LocalOrganisationRefType references an organisation locally where the reference to the organisation scheme which defines it is provided elsewhere. The reference requires that the class (i.e. the type) or the organisation being reference be provided.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="LocalOrganisationRefBaseType">
        <xs:attribute name="class" type="OrganisationTypeCodelistType" use="optional" />
        <xs:attribute fixed="base" name="package" type="ItemSchemePackageTypeCodelistType" use="optional" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="OrganisationUnitSchemeReferenceType">
    <xs:annotation>
      <xs:documentation>OrganisationUnitSchemeReferenceType is a type for referencing an organisation unit scheme object. It consists of a URN and/or a complete set of reference fields.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="OrganisationSchemeReferenceBaseType">
        <xs:choice>
          <xs:sequence>
            <xs:element form="unqualified" name="Ref" type="OrganisationUnitSchemeRefType" />
            <xs:element minOccurs="0" form="unqualified" name="URN" type="xs:anyURI" />
          </xs:sequence>
          <xs:element form="unqualified" name="URN" type="xs:anyURI" />
        </xs:choice>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="OrganisationUnitSchemeRefType">
    <xs:annotation>
      <xs:documentation>OrganisationUnitSchemeRefType contains a set of reference fields for an organisation unit scheme.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="OrganisationSchemeRefBaseType">
        <xs:attribute fixed="OrganisationUnitScheme" name="class" type="OrganisationSchemeTypeCodelistType" use="optional" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="OrganisationUnitReferenceType">
    <xs:annotation>
      <xs:documentation>OrganisationUnitReferenceType is a type for referencing an organisation unit. It consists of a URN and/or a complete set of reference fields.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="OrganisationReferenceBaseType">
        <xs:choice>
          <xs:sequence>
            <xs:element form="unqualified" name="Ref" type="OrganisationUnitRefType" />
            <xs:element minOccurs="0" form="unqualified" name="URN" type="xs:anyURI" />
          </xs:sequence>
          <xs:element form="unqualified" name="URN" type="xs:anyURI" />
        </xs:choice>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="OrganisationUnitRefType">
    <xs:annotation>
      <xs:documentation>OrganisationUnitRefType contains a set of reference fields for referencing an organisation unit within an organisation unit scheme.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="OrganisationRefBaseType">
        <xs:attribute fixed="OrganisationUnit" name="class" type="OrganisationTypeCodelistType" use="optional" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="LocalOrganisationUnitReferenceType">
    <xs:annotation>
      <xs:documentation>LocalOrganisationUnitReferenceType provides a simple reference to an organisation unit, where the reference to the organisation unit scheme which defines it is provided in another context.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="LocalOrganisationReferenceBaseType">
        <xs:sequence>
          <xs:element form="unqualified" name="Ref" type="LocalOrganisationUnitRefType" />
        </xs:sequence>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="LocalOrganisationUnitRefType">
    <xs:annotation>
      <xs:documentation>LocalOrganisationUnitRefType references an organisation unit locally where the reference to the organisation unit scheme which defines it is provided elsewhere.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="LocalOrganisationRefBaseType">
        <xs:attribute fixed="OrganisationUnit" name="class" type="OrganisationTypeCodelistType" use="optional" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="AgencySchemeReferenceType">
    <xs:annotation>
      <xs:documentation>AgencySchemeReferenceType is a type for referencing an agency scheme object. It consists of a URN and/or a complete set of reference fields.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="OrganisationSchemeReferenceBaseType">
        <xs:choice>
          <xs:sequence>
            <xs:element form="unqualified" name="Ref" type="AgencySchemeRefType" />
            <xs:element minOccurs="0" form="unqualified" name="URN" type="xs:anyURI" />
          </xs:sequence>
          <xs:element form="unqualified" name="URN" type="xs:anyURI" />
        </xs:choice>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="AgencySchemeRefType">
    <xs:annotation>
      <xs:documentation>AgencySchemeRefType contains a set of reference fields for an agency scheme.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="OrganisationSchemeRefBaseType">
        <xs:attribute fixed="AgencyScheme" name="class" type="OrganisationSchemeTypeCodelistType" use="optional" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="AgencyReferenceType">
    <xs:annotation>
      <xs:documentation>AgencyReferenceType is a type for referencing an agency. It consists of a URN and/or a complete set of reference fields.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="OrganisationReferenceBaseType">
        <xs:choice>
          <xs:sequence>
            <xs:element form="unqualified" name="Ref" type="AgencyRefType" />
            <xs:element minOccurs="0" form="unqualified" name="URN" type="xs:anyURI" />
          </xs:sequence>
          <xs:element form="unqualified" name="URN" type="xs:anyURI" />
        </xs:choice>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="AgencyRefType">
    <xs:annotation>
      <xs:documentation>AgencyRefType contains a set of reference fields for referencing an agency within an agency scheme.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="OrganisationRefBaseType">
        <xs:attribute fixed="Agency" name="class" type="OrganisationTypeCodelistType" use="optional" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="LocalAgencyReferenceType">
    <xs:annotation>
      <xs:documentation>LocalAgencyReferenceType provides a simple reference to an agency, where the reference to the agency scheme which defines it is provided in another context.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="LocalOrganisationReferenceBaseType">
        <xs:sequence>
          <xs:element form="unqualified" name="Ref" type="LocalAgencyRefType" />
        </xs:sequence>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="LocalAgencyRefType">
    <xs:annotation>
      <xs:documentation>LocalAgencyRefType references an agency locally where the reference to the agency scheme which defines it is provided elsewhere.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="LocalOrganisationRefBaseType">
        <xs:attribute fixed="Agency" name="class" type="OrganisationTypeCodelistType" use="optional" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="DataConsumerSchemeReferenceType">
    <xs:annotation>
      <xs:documentation>DataConsumerSchemeReferenceType is a type for referencing a data consumer scheme object. It consists of a URN and/or a complete set of reference fields.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="OrganisationSchemeReferenceBaseType">
        <xs:choice>
          <xs:sequence>
            <xs:element form="unqualified" name="Ref" type="DataConsumerSchemeRefType" />
            <xs:element minOccurs="0" form="unqualified" name="URN" type="xs:anyURI" />
          </xs:sequence>
          <xs:element form="unqualified" name="URN" type="xs:anyURI" />
        </xs:choice>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="DataConsumerSchemeRefType">
    <xs:annotation>
      <xs:documentation>DataConsumerSchemeRefType contains a set of reference fields for a data consumer scheme.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="OrganisationSchemeRefBaseType">
        <xs:attribute fixed="DataConsumerScheme" name="class" type="OrganisationSchemeTypeCodelistType" use="optional" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="DataConsumerReferenceType">
    <xs:annotation>
      <xs:documentation>DataConsumerReferenceType is a type for referencing a data consumer. It consists of a URN and/or a complete set of reference fields.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="OrganisationReferenceBaseType">
        <xs:choice>
          <xs:sequence>
            <xs:element form="unqualified" name="Ref" type="DataConsumerRefType" />
            <xs:element minOccurs="0" form="unqualified" name="URN" type="xs:anyURI" />
          </xs:sequence>
          <xs:element form="unqualified" name="URN" type="xs:anyURI" />
        </xs:choice>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="DataConsumerRefType">
    <xs:annotation>
      <xs:documentation>DataConsumerRefType contains a set of reference fields for referencing a data consumer within a data consumer scheme.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="OrganisationRefBaseType">
        <xs:attribute fixed="DataConsumer" name="class" type="OrganisationTypeCodelistType" use="optional" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="LocalDataConsumerReferenceType">
    <xs:annotation>
      <xs:documentation>LocalDataConsumerReferenceType provides a simple reference to a data consumer, where the reference to the data consumer scheme which defines it is provided in another context.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="LocalOrganisationReferenceBaseType">
        <xs:sequence>
          <xs:element form="unqualified" name="Ref" type="LocalDataConsumerRefType" />
        </xs:sequence>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="LocalDataConsumerRefType">
    <xs:annotation>
      <xs:documentation>LocalDataConsumerRefType references a data consumer locally where the reference to the data consumer scheme which defines it is provided elsewhere.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="LocalOrganisationRefBaseType">
        <xs:attribute fixed="DataConsumer" name="class" type="OrganisationTypeCodelistType" use="optional" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="DataProviderSchemeReferenceType">
    <xs:annotation>
      <xs:documentation>DataProviderSchemeReferenceType is a type for referencing a data provider scheme object. It consists of a URN and/or a complete set of reference fields.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="OrganisationSchemeReferenceBaseType">
        <xs:choice>
          <xs:sequence>
            <xs:element form="unqualified" name="Ref" type="DataProviderSchemeRefType" />
            <xs:element minOccurs="0" form="unqualified" name="URN" type="xs:anyURI" />
          </xs:sequence>
          <xs:element form="unqualified" name="URN" type="xs:anyURI" />
        </xs:choice>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="DataProviderSchemeRefType">
    <xs:annotation>
      <xs:documentation>DataProviderSchemeRefType contains a set of reference fields for a data provider scheme.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="OrganisationSchemeRefBaseType">
        <xs:attribute fixed="DataProviderScheme" name="class" type="OrganisationSchemeTypeCodelistType" use="optional" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="DataProviderReferenceType">
    <xs:annotation>
      <xs:documentation>DataProviderReferenceType is a type for referencing a data provider. It consists of a URN and/or a complete set of reference fields.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="OrganisationReferenceBaseType">
        <xs:choice>
          <xs:sequence>
            <xs:element form="unqualified" name="Ref" type="DataProviderRefType" />
            <xs:element minOccurs="0" form="unqualified" name="URN" type="xs:anyURI" />
          </xs:sequence>
          <xs:element form="unqualified" name="URN" type="xs:anyURI" />
        </xs:choice>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="DataProviderRefType">
    <xs:annotation>
      <xs:documentation>DataProviderRefType contains a set of reference fields for referencing a data provider within a data provider scheme.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="OrganisationRefBaseType">
        <xs:attribute fixed="DataProvider" name="class" type="OrganisationTypeCodelistType" use="optional" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="LocalDataProviderReferenceType">
    <xs:annotation>
      <xs:documentation>LocalDataProviderReferenceType provides a simple reference to a data provider, where the reference to the data provider scheme which defines it is provided in another context.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="LocalOrganisationReferenceBaseType">
        <xs:sequence>
          <xs:element form="unqualified" name="Ref" type="LocalDataProviderRefType" />
        </xs:sequence>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="LocalDataProviderRefType">
    <xs:annotation>
      <xs:documentation>LocalDataProviderRefType references a data provider locally where the reference to the data provider scheme which defines it is provided elsewhere.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="LocalOrganisationRefBaseType">
        <xs:attribute fixed="DataProvider" name="class" type="OrganisationTypeCodelistType" use="optional" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="ReportingTaxonomyReferenceType">
    <xs:annotation>
      <xs:documentation>ReportingTaxonomyReferenceType is a type for referencing a reporting taxonomy object. It consists of a URN and/or a complete set of reference fields.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="ItemSchemeReferenceBaseType">
        <xs:choice>
          <xs:sequence>
            <xs:element form="unqualified" name="Ref" type="ReportingTaxonomyRefType" />
            <xs:element minOccurs="0" form="unqualified" name="URN" type="xs:anyURI" />
          </xs:sequence>
          <xs:element form="unqualified" name="URN" type="xs:anyURI" />
        </xs:choice>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="ReportingTaxonomyRefType">
    <xs:annotation>
      <xs:documentation>ReportingTaxonomyRefType provides a reference to a reporting taxonomy via a complete set of reference fields.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="ItemSchemeRefBaseType">
        <xs:attribute fixed="ReportingTaxonomy" name="class" type="ItemSchemeTypeCodelistType" use="optional" />
        <xs:attribute fixed="categoryscheme" name="package" type="ItemSchemePackageTypeCodelistType" use="optional" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="ReportingCategoryReferenceType">
    <xs:annotation>
      <xs:documentation>ReportingCategoryReferenceType is a type for referencing a reporting category object. It consists of a URN and/or a complete set of reference fields.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="ItemReferenceType">
        <xs:choice>
          <xs:sequence>
            <xs:element form="unqualified" name="Ref" type="ReportCategoryRefType" />
            <xs:element minOccurs="0" form="unqualified" name="URN" type="xs:anyURI" />
          </xs:sequence>
          <xs:element form="unqualified" name="URN" type="xs:anyURI" />
        </xs:choice>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="ReportCategoryRefType">
    <xs:annotation>
      <xs:documentation>ReportCategoryRefType contains a set of fields for referencing a reporting category within a reporting taxonomy.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="ItemRefBaseType">
        <xs:attribute name="maintainableParentID" type="IDType" use="required">
          <xs:annotation>
            <xs:documentation>The maintainableParentID references the reporting taxonomy in which the reporting category being referenced is defined.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute default="1.0" name="maintainableParentVersion" type="VersionType" use="optional">
          <xs:annotation>
            <xs:documentation>The maintainableParentVersion attribute references the version of the reporting taxonomy in which the reporting category being referenced is defined. If not supplied, a default value of 1.0 is assumed.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute fixed="ReportingCategory" name="class" type="ItemTypeCodelistType" use="optional" />
        <xs:attribute fixed="categoryscheme" name="package" type="ItemSchemePackageTypeCodelistType" use="optional" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="LocalReportingCategoryReferenceType">
    <xs:annotation>
      <xs:documentation>LocalReportingCategoryReferenceType provides a simple references to a reporting category where the identification of the reporting taxonomy which defines it is contained in another context.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="LocalItemReferenceType">
        <xs:sequence>
          <xs:element form="unqualified" name="Ref" type="LocalReportingCategoryRefType" />
        </xs:sequence>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="LocalReportingCategoryRefType">
    <xs:annotation>
      <xs:documentation>LocalReportingCategoryRefType references a reporting category locally where the references to the reporting taxonomy which defines it is provided elsewhere.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="LocalItemRefBaseType">
        <xs:attribute fixed="ReportingCategory" name="class" type="ItemTypeCodelistType" use="optional" />
        <xs:attribute fixed="categoryscheme" name="package" type="ItemSchemePackageTypeCodelistType" use="optional" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="HierarchicalCodelistReferenceType">
    <xs:annotation>
      <xs:documentation>HierarchicalCodelistReferenceType is a type for referencing a hierarchical codelist object. It consists of a URN and/or a complete set of reference fields.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="MaintainableReferenceBaseType">
        <xs:choice>
          <xs:sequence>
            <xs:element form="unqualified" name="Ref" type="HierarchicalCodelistRefType" />
            <xs:element minOccurs="0" form="unqualified" name="URN" type="xs:anyURI" />
          </xs:sequence>
          <xs:element form="unqualified" name="URN" type="xs:anyURI" />
        </xs:choice>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="HierarchicalCodelistRefType">
    <xs:annotation>
      <xs:documentation>HierarchicalCodelistRefType contains a set of reference fields for a hierarchical codelist.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="MaintainableRefBaseType">
        <xs:attribute fixed="HierarchicalCodelist" name="class" type="MaintainableTypeCodelistType" use="optional" />
        <xs:attribute fixed="codelist" name="package" type="ItemSchemePackageTypeCodelistType" use="optional" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="HierarchyReferenceType">
    <xs:annotation>
      <xs:documentation>HierarchyReferenceType is a type for referencing a hierarchy within a hierarchical codelist.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="ChildObjectReferenceType">
        <xs:choice>
          <xs:sequence>
            <xs:element form="unqualified" name="Ref" type="HierarchyRefType" />
            <xs:element minOccurs="0" form="unqualified" name="URN" type="xs:anyURI" />
          </xs:sequence>
          <xs:element form="unqualified" name="URN" type="xs:anyURI" />
        </xs:choice>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="HierarchyRefType">
    <xs:annotation>
      <xs:documentation>HierarchyRefType is type which references a hierarchy from within a hierarchical codelist. Reference fields are required for both the hierarchy and the codelist.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="ChildObjectRefBaseType">
        <xs:attribute name="id" type="IDType" use="required" />
        <xs:attribute fixed="Hierarchy" name="class" type="ObjectTypeCodelistType" use="optional" />
        <xs:attribute fixed="codelist" name="package" type="PackageTypeCodelistType" use="optional" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="LevelReferenceType">
    <xs:annotation>
      <xs:documentation>LevelReferenceType is a type for referencing a level object. It consists of a URN and/or a complete set of reference fields.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="ChildObjectReferenceType">
        <xs:choice>
          <xs:sequence>
            <xs:element form="unqualified" name="Ref" type="LevelRefType" />
            <xs:element minOccurs="0" form="unqualified" name="URN" type="xs:anyURI" />
          </xs:sequence>
          <xs:element form="unqualified" name="URN" type="xs:anyURI" />
        </xs:choice>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="LevelRefType">
    <xs:annotation>
      <xs:documentation>LevelRefType references a level from within a hierarchical codelist. Reference fields are required for both the level and the codelist.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="ChildObjectRefBaseType">
        <xs:attribute name="id" type="IDType" use="required" />
        <xs:attribute fixed="Level" name="class" type="ObjectTypeCodelistType" use="optional" />
        <xs:attribute fixed="codelist" name="package" type="PackageTypeCodelistType" use="optional" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="LocalLevelReferenceType">
    <xs:annotation>
      <xs:documentation>LocalLevelReferenceType is a type for referencing a level object where the reference to the hierarchical codelist and the hierarchy in which it is defined is provided in another context (e.g. is inferred from the hierarchy in which the reference is defined).</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="ReferenceType">
        <xs:sequence>
          <xs:element form="unqualified" name="Ref" type="LocalLevelRefType" />
        </xs:sequence>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="LocalLevelRefType">
    <xs:annotation>
      <xs:documentation>LocalLevelRefType references a level object where the reference to the hierarchy in which it is contained and the hierarchical codelist which define it are provided in another context.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="LocalIdentifiableRefBaseType">
        <xs:attribute fixed="Level" name="class" type="ObjectTypeCodelistType" use="optional" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="HierarchicalCodeReferenceType">
    <xs:annotation>
      <xs:documentation>HierarchicalCodeReferenceType is a type for referencing a hierarchical code object. It consists of a URN and/or a complete set of reference fields.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="ContainerChildObjectReferenceType">
        <xs:choice>
          <xs:sequence>
            <xs:element form="unqualified" name="Ref" type="HierarchicalCodeRefType" />
            <xs:element minOccurs="0" form="unqualified" name="URN" type="xs:anyURI" />
          </xs:sequence>
          <xs:element form="unqualified" name="URN" type="xs:anyURI" />
        </xs:choice>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="HierarchicalCodeRefType">
    <xs:annotation>
      <xs:documentation>HierarchicalCodeRefType references a code from within a hierarchical codelist. Reference fields are required for both the code and the codelist.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="ContainerChildObjectRefBaseType">
        <xs:attribute name="maintainableParentID" type="IDType" use="required">
          <xs:annotation>
            <xs:documentation>The maintainableParentID references the hierarchical codelist in which the code being referenced is defined.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute default="1.0" name="maintainableParentVersion" type="VersionType" use="optional">
          <xs:annotation>
            <xs:documentation>The maintainableParentVersion attribute references the version of the hierarchical codelist in which the code being referenced is defined. If not supplied, a default value of 1.0 is assumed.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="containerID" type="IDType" use="required">
          <xs:annotation>
            <xs:documentation>The containerID references the hierarchy which contains the code being referenced is defined.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute fixed="HierarchicalCode" name="class" type="ObjectTypeCodelistType" use="optional" />
        <xs:attribute fixed="codelist" name="package" type="PackageTypeCodelistType" use="optional" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="ConstraintReferenceType">
    <xs:annotation>
      <xs:documentation>ConstraintReferenceType is a type for referencing a constraint object. It consists of a URN and/or a complete set of reference fields.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="MaintainableReferenceBaseType">
        <xs:choice>
          <xs:sequence>
            <xs:element form="unqualified" name="Ref" type="ConstraintRefType" />
            <xs:element minOccurs="0" form="unqualified" name="URN" type="xs:anyURI" />
          </xs:sequence>
          <xs:element form="unqualified" name="URN" type="xs:anyURI" />
        </xs:choice>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="ConstraintRefType" abstract="true">
    <xs:annotation>
      <xs:documentation>ConstraintRefType contains a set of reference fields for a constraint.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="MaintainableRefBaseType">
        <xs:attribute name="class" type="ConstraintTypeCodelistType" use="optional" />
        <xs:attribute fixed="registry" name="package" type="PackageTypeCodelistType" use="optional" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="AttachmentConstraintReferenceType">
    <xs:annotation>
      <xs:documentation>AttachmentConstraintReferenceType is a type for referencing a attachment constraint object. It consists of a URN and/or a complete set of reference fields.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="ConstraintReferenceType">
        <xs:choice>
          <xs:sequence>
            <xs:element form="unqualified" name="Ref" type="AttachmentConstraintRefType" />
            <xs:element minOccurs="0" form="unqualified" name="URN" type="xs:anyURI" />
          </xs:sequence>
          <xs:element form="unqualified" name="URN" type="xs:anyURI" />
        </xs:choice>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="AttachmentConstraintRefType">
    <xs:annotation>
      <xs:documentation>AttachmentConstraintRefType contains a set of reference fields for an attachment constraint.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="ConstraintRefType">
        <xs:attribute fixed="AttachmentConstraint" name="class" type="ConstraintTypeCodelistType" use="optional" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="ContentConstraintReferenceType">
    <xs:annotation>
      <xs:documentation>ContentConstraintReferenceType is a type for referencing a content constraint object. It consists of a URN and/or a complete set of reference fields.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="ConstraintReferenceType">
        <xs:choice>
          <xs:sequence>
            <xs:element form="unqualified" name="Ref" type="ContentConstraintRefType" />
            <xs:element minOccurs="0" form="unqualified" name="URN" type="xs:anyURI" />
          </xs:sequence>
          <xs:element form="unqualified" name="URN" type="xs:anyURI" />
        </xs:choice>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="ContentConstraintRefType">
    <xs:annotation>
      <xs:documentation>ContentConstraintRefType contains a set of reference fields for a content constraint.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="ConstraintRefType">
        <xs:attribute fixed="ContentConstraint" name="class" type="ConstraintTypeCodelistType" use="optional" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="DataflowReferenceType">
    <xs:annotation>
      <xs:documentation>DataflowReferenceType is a type for referencing a dataflow object. It consists of a URN and/or a complete set of reference fields.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="StructureUsageReferenceBaseType">
        <xs:choice>
          <xs:sequence>
            <xs:element form="unqualified" name="Ref" type="DataflowRefType" />
            <xs:element minOccurs="0" form="unqualified" name="URN" type="xs:anyURI" />
          </xs:sequence>
          <xs:element form="unqualified" name="URN" type="xs:anyURI" />
        </xs:choice>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="DataflowRefType">
    <xs:annotation>
      <xs:documentation>DataflowRefType contains a set of reference fields for a data flow.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="StructureUsageRefBaseType">
        <xs:attribute fixed="Dataflow" name="class" type="StructureUsageTypeCodelistType" use="optional" />
        <xs:attribute fixed="datastructure" name="package" type="StructurePackageTypeCodelistType" use="optional" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="MetadataflowReferenceType">
    <xs:annotation>
      <xs:documentation>MetadataflowReferenceType is a type for referencing a metadata flow object. It consists of a URN and/or a complete set of reference fields.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="StructureUsageReferenceBaseType">
        <xs:choice>
          <xs:sequence>
            <xs:element form="unqualified" name="Ref" type="MetadataflowRefType" />
            <xs:element minOccurs="0" form="unqualified" name="URN" type="xs:anyURI" />
          </xs:sequence>
          <xs:element form="unqualified" name="URN" type="xs:anyURI" />
        </xs:choice>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="MetadataflowRefType">
    <xs:annotation>
      <xs:documentation>MetadataflowRefType contains a set of reference fields for a metadata flow.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="StructureUsageRefBaseType">
        <xs:attribute fixed="Metadataflow" name="class" type="StructureUsageTypeCodelistType" use="optional" />
        <xs:attribute fixed="metadatastructure" name="package" type="StructurePackageTypeCodelistType" use="optional" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="DataStructureReferenceType">
    <xs:annotation>
      <xs:documentation>DataStructureReferenceType is a type for referencing a data structure definition object. It consists of a URN and/or a complete set of reference fields.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="StructureReferenceBaseType">
        <xs:choice>
          <xs:sequence>
            <xs:element form="unqualified" name="Ref" type="DataStructureRefType" />
            <xs:element minOccurs="0" form="unqualified" name="URN" type="xs:anyURI" />
          </xs:sequence>
          <xs:element form="unqualified" name="URN" type="xs:anyURI" />
        </xs:choice>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="DataStructureRefType">
    <xs:annotation>
      <xs:documentation>DataStructureRefType contains a set of reference fields for a data structure definition.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="StructureRefBaseType">
        <xs:attribute fixed="DataStructure" name="class" type="StructureTypeCodelistType" use="optional" />
        <xs:attribute fixed="datastructure" name="package" type="StructurePackageTypeCodelistType" use="optional" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="KeyDescriptorReferenceType">
    <xs:annotation>
      <xs:documentation>KeyDescriptorReferenceType is a type for referencing a key descriptor object. It consists of a URN and/or a complete set of reference fields.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="ComponentListReferenceType">
        <xs:choice>
          <xs:sequence>
            <xs:element form="unqualified" name="Ref" type="KeyDescriptorRefType" />
            <xs:element minOccurs="0" form="unqualified" name="URN" type="xs:anyURI" />
          </xs:sequence>
          <xs:element form="unqualified" name="URN" type="xs:anyURI" />
        </xs:choice>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="KeyDescriptorRefType">
    <xs:annotation>
      <xs:documentation>KeyDescriptorRefType contains a reference to the key descriptor within a data structure definition.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="ComponentListRefBaseType">
        <xs:attribute fixed="DIMENSION_DESCRIPTOR" name="id" type="IDType" use="required" />
        <xs:attribute fixed="DimensionDescriptor" name="class" type="ComponentListTypeCodelistType" use="optional" />
        <xs:attribute fixed="datastructure" name="package" type="StructurePackageTypeCodelistType" use="optional" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="AttributeDescriptorReferenceType">
    <xs:annotation>
      <xs:documentation>AttributeDescriptorReferenceType is a type for referencing an attribute descriptor object. It consists of a URN and/or a complete set of reference fields.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="ComponentListReferenceType">
        <xs:choice>
          <xs:sequence>
            <xs:element form="unqualified" name="Ref" type="AttributeDescriptorRefType" />
            <xs:element minOccurs="0" form="unqualified" name="URN" type="xs:anyURI" />
          </xs:sequence>
          <xs:element form="unqualified" name="URN" type="xs:anyURI" />
        </xs:choice>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="AttributeDescriptorRefType">
    <xs:annotation>
      <xs:documentation>AttributeDescriptorRefType contains a reference to the attribute descriptor within a data structure definition.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="ComponentListRefBaseType">
        <xs:attribute fixed="ATTRIBUTE_DESCRIPTOR" name="id" type="IDType" use="required" />
        <xs:attribute fixed="AttributeDescriptor" name="class" type="ComponentListTypeCodelistType" use="optional" />
        <xs:attribute fixed="datastructure" name="package" type="StructurePackageTypeCodelistType" use="optional" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="MeasureDescriptorReferenceType">
    <xs:annotation>
      <xs:documentation>MeasureDescriptorReferenceType is a type for referencing a measure descriptor object. It consists of a URN and/or a complete set of reference fields.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="ComponentListReferenceType">
        <xs:choice>
          <xs:sequence>
            <xs:element form="unqualified" name="Ref" type="MeasureDescriptorRefType" />
            <xs:element minOccurs="0" form="unqualified" name="URN" type="xs:anyURI" />
          </xs:sequence>
          <xs:element form="unqualified" name="URN" type="xs:anyURI" />
        </xs:choice>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="MeasureDescriptorRefType">
    <xs:annotation>
      <xs:documentation>MeasureDescriptorRefType contains a reference to the measure descriptor within a data structure definition.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="ComponentListRefBaseType">
        <xs:attribute fixed="MEASURE_DESCRIPTOR" name="id" type="IDType" use="required" />
        <xs:attribute fixed="MeasureDescriptor" name="class" type="ComponentListTypeCodelistType" use="optional" />
        <xs:attribute fixed="datastructure" name="package" type="StructurePackageTypeCodelistType" use="optional" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="GroupKeyDescriptorReferenceType">
    <xs:annotation>
      <xs:documentation>GroupKeyDescriptorReferenceType is a type for referencing a group key descriptor object. It consists of a URN and/or a complete set of reference fields.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="ComponentListReferenceType">
        <xs:choice>
          <xs:sequence>
            <xs:element form="unqualified" name="Ref" type="GroupKeyDescriptorRefType" />
            <xs:element minOccurs="0" form="unqualified" name="URN" type="xs:anyURI" />
          </xs:sequence>
          <xs:element form="unqualified" name="URN" type="xs:anyURI" />
        </xs:choice>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="GroupKeyDescriptorRefType">
    <xs:annotation>
      <xs:documentation>GroupKeyDescriptorRefType contains a reference to a group key descriptor within a data structure definition.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="ComponentListRefBaseType">
        <xs:attribute name="id" type="IDType" use="required" />
        <xs:attribute fixed="GroupDimensionDescriptor" name="class" type="ComponentListTypeCodelistType" use="optional" />
        <xs:attribute fixed="datastructure" name="package" type="StructurePackageTypeCodelistType" use="optional" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="LocalGroupKeyDescriptorReferenceType">
    <xs:annotation>
      <xs:documentation>LocalGroupKeyDescriptorReferenceType is a type for referencing a group key descriptor locally, where the reference to the data structure definition which defines it is provided in another context (for example the data structure definition in which the reference occurs).</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="LocalComponentListReferenceType">
        <xs:sequence>
          <xs:element form="unqualified" name="Ref" type="LocalGroupKeyDescriptorRefType" />
        </xs:sequence>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="LocalGroupKeyDescriptorRefType">
    <xs:annotation>
      <xs:documentation>LocalGroupKeyDescriptorRefType contains a local reference to a group key descriptor.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="LocalComponentListRefBaseType">
        <xs:attribute fixed="GroupDimensionDescriptor" name="class" type="ComponentListTypeCodelistType" use="optional" />
        <xs:attribute fixed="datastructure" name="package" type="StructurePackageTypeCodelistType" use="optional" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="DimensionReferenceType">
    <xs:annotation>
      <xs:documentation>DimensionReferenceType is a type for referencing a dimension object. It consists of a URN and/or a complete set of reference fields.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="ComponentReferenceType">
        <xs:choice>
          <xs:sequence>
            <xs:element form="unqualified" name="Ref" type="DimensionRefType" />
            <xs:element minOccurs="0" form="unqualified" name="URN" type="xs:anyURI" />
          </xs:sequence>
          <xs:element form="unqualified" name="URN" type="xs:anyURI" />
        </xs:choice>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="DimensionRefType">
    <xs:annotation>
      <xs:documentation>DimensionRefType contains a reference to a dimension within a data structure definition. Note that since there is only one key descriptor, the container reference fields are prohibited.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="ComponentRefBaseType">
        <xs:attribute name="containerID" type="IDType" use="prohibited" />
        <xs:attribute name="id" type="IDType" use="required" />
        <xs:attribute fixed="Dimension" name="class" type="DimensionTypeCodelistType" use="optional" />
        <xs:attribute fixed="datastructure" name="package" type="StructurePackageTypeCodelistType" use="optional" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="MeasureDimensionReferenceType">
    <xs:annotation>
      <xs:documentation>MeasureDimensionReferenceType is a type for referencing a measure dimension object. It consists of a URN and/or a complete set of reference fields.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="ComponentReferenceType">
        <xs:choice>
          <xs:sequence>
            <xs:element form="unqualified" name="Ref" type="MeasureDimensionRefType" />
            <xs:element minOccurs="0" form="unqualified" name="URN" type="xs:anyURI" />
          </xs:sequence>
          <xs:element form="unqualified" name="URN" type="xs:anyURI" />
        </xs:choice>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="MeasureDimensionRefType">
    <xs:annotation>
      <xs:documentation>MeasureDimensionRefType contains a reference to the measure dimension within a data structure definition. Note that since there is only one key descriptor, the container reference fields are prohibited.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="ComponentRefBaseType">
        <xs:attribute name="containerID" type="IDType" use="prohibited" />
        <xs:attribute name="id" type="IDType" use="required" />
        <xs:attribute fixed="MeasureDimension" name="class" type="DimensionTypeCodelistType" use="optional" />
        <xs:attribute fixed="datastructure" name="package" type="StructurePackageTypeCodelistType" use="optional" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="TimeDimensionReferenceType">
    <xs:annotation>
      <xs:documentation>TimeDimensionReferenceType is a type for referencing a time dimension object. It consists of a URN and/or a complete set of reference fields.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="ComponentReferenceType">
        <xs:choice>
          <xs:sequence>
            <xs:element form="unqualified" name="Ref" type="TimeDimensionRefType" />
            <xs:element minOccurs="0" form="unqualified" name="URN" type="xs:anyURI" />
          </xs:sequence>
          <xs:element form="unqualified" name="URN" type="xs:anyURI" />
        </xs:choice>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="TimeDimensionRefType">
    <xs:annotation>
      <xs:documentation>TimeDimensionRefType contains a reference to the time dimension within a data structure definition. Note that since there is only one key descriptor, the container reference fields are prohibited.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="ComponentRefBaseType">
        <xs:attribute name="containerID" type="IDType" use="prohibited" />
        <xs:attribute fixed="TIME_PERIOD" name="id" type="IDType" use="required" />
        <xs:attribute fixed="TimeDimension" name="class" type="DimensionTypeCodelistType" use="optional" />
        <xs:attribute fixed="datastructure" name="package" type="StructurePackageTypeCodelistType" use="optional" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="LocalDimensionReferenceType">
    <xs:annotation>
      <xs:documentation>LocalDimensionReferenceType is a type for referencing any type of dimension locally, where the reference to the data structure definition which defines the dimension is provided in another context (for example the data structure definition in which the reference occurs).</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="LocalComponentReferenceBaseType">
        <xs:sequence>
          <xs:element form="unqualified" name="Ref" type="LocalDimensionRefType" />
        </xs:sequence>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="LocalDimensionRefType">
    <xs:annotation>
      <xs:documentation>LocalDimensionRefType contains the reference fields for referencing a dimension locally.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="LocalComponentRefBaseType">
        <xs:attribute name="id" type="IDType" use="required" />
        <xs:attribute default="Dimension" name="class" type="DimensionTypeCodelistType" use="optional">
          <xs:annotation>
            <xs:documentation>The class attribute is optional and provided a default value of Dimension. It is strongly recommended that if the time or measure dimension is referenced, that the proper value be set for this field. However, this is not absolutely necessary since all data structure definition components must have a unique identifier within the scope of the entire data structure. It does, however, allow systems which will treat such a reference as a URN to easily construct the URN without having to verify the object class of the referenced dimension.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute fixed="datastructure" name="package" type="StructurePackageTypeCodelistType" use="optional" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="AttributeReferenceType">
    <xs:annotation>
      <xs:documentation>AttributeReferenceType is a type for referencing an attribute object. It consists of a URN and/or a complete set of reference fields.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="ComponentReferenceType">
        <xs:choice>
          <xs:sequence>
            <xs:element form="unqualified" name="Ref" type="AttributeRefType" />
            <xs:element minOccurs="0" form="unqualified" name="URN" type="xs:anyURI" />
          </xs:sequence>
          <xs:element form="unqualified" name="URN" type="xs:anyURI" />
        </xs:choice>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="AttributeRefType">
    <xs:annotation>
      <xs:documentation>AttributeRefType contains a reference to an attribute within a data structure definition. Note that since there is only one attribute descriptor, the container reference fields are prohibited.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="ComponentRefBaseType">
        <xs:attribute name="containerID" type="IDType" use="prohibited" />
        <xs:attribute name="id" type="IDType" use="required" />
        <xs:attribute fixed="Attribute" name="class" type="ComponentTypeCodelistType" use="optional" />
        <xs:attribute fixed="datastructure" name="package" type="StructurePackageTypeCodelistType" use="optional" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="PrimaryMeasureReferenceType">
    <xs:annotation>
      <xs:documentation>PrimaryMeasureReferenceType is a type for referencing a primary measure object. It consists of a URN and/or a complete set of reference fields.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="ComponentReferenceType">
        <xs:choice>
          <xs:sequence>
            <xs:element form="unqualified" name="Ref" type="PrimaryMeasureRefType" />
            <xs:element minOccurs="0" form="unqualified" name="URN" type="xs:anyURI" />
          </xs:sequence>
          <xs:element form="unqualified" name="URN" type="xs:anyURI" />
        </xs:choice>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="PrimaryMeasureRefType">
    <xs:annotation>
      <xs:documentation>PrimaryMeasureRefType contains a reference to the primary measure within a data structure definition. Note that since there is only one key descriptor, the container reference fields are prohibited.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="ComponentRefBaseType">
        <xs:attribute name="containerID" type="IDType" use="prohibited" />
        <xs:attribute fixed="OBS_VALUE" name="id" type="IDType" use="required" />
        <xs:attribute fixed="PrimaryMeasure" name="class" type="ComponentTypeCodelistType" use="optional" />
        <xs:attribute fixed="datastructure" name="package" type="StructurePackageTypeCodelistType" use="optional" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="LocalPrimaryMeasureReferenceType">
    <xs:annotation>
      <xs:documentation>LocalPrimaryMeasureReferenceType is a type for referencing a primary measure locally, where the reference to the data structure definition which defines the primary measure is provided in another context (for example the data structure definition in which the reference occurs).</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="LocalComponentReferenceBaseType">
        <xs:sequence>
          <xs:element form="unqualified" name="Ref" type="LocalPrimaryMeasureRefType" />
        </xs:sequence>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="LocalPrimaryMeasureRefType">
    <xs:annotation>
      <xs:documentation>LocalPrimaryMeasureRefType contains the reference fields for referencing a primary measure locally.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="LocalComponentRefBaseType">
        <xs:attribute fixed="OBS_VALUE" name="id" type="IDType" use="required" />
        <xs:attribute fixed="PrimaryMeasure" name="class" type="ComponentTypeCodelistType" use="optional" />
        <xs:attribute fixed="datastructure" name="package" type="StructurePackageTypeCodelistType" use="optional" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="LocalDataStructureComponentReferenceType">
    <xs:annotation>
      <xs:documentation>LocalDataStructureComponentReferenceType is a type for referencing any type of data structure component locally, where the reference for the data structure definition which defines the components is available in another context.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="LocalComponentListComponentReferenceBaseType">
        <xs:sequence>
          <xs:element form="unqualified" name="Ref" type="LocalDataStructureComponentRefType" />
        </xs:sequence>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="LocalDataStructureComponentRefType">
    <xs:annotation>
      <xs:documentation>LocalDataStructureComponentRefType contains the reference fields for referencing any data structure component locally. This reference must specify the class of the component being referenced.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="LocalComponentListComponentRefBaseType">
        <xs:attribute name="containerID" type="IDType" use="prohibited" />
        <xs:attribute name="id" type="IDType" use="required" />
        <xs:attribute name="class" type="DataStructureComponentTypeCodelistType" use="required" />
        <xs:attribute fixed="datastructure" name="package" type="StructurePackageTypeCodelistType" use="optional" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="DataStructureEnumerationSchemeReferenceType">
    <xs:annotation>
      <xs:documentation>DataStructureEnumerationSchemeReferenceType is a type for referencing any type of item scheme that is allowable as the enumeration of the representation of a data structure definition component. It consists of a URN and/or a complete set of reference fields.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="ItemSchemeReferenceType">
        <xs:choice>
          <xs:sequence>
            <xs:element form="unqualified" name="Ref" type="DataStructureEnumerationSchemeRefType" />
            <xs:element minOccurs="0" form="unqualified" name="URN" type="xs:anyURI" />
          </xs:sequence>
          <xs:element form="unqualified" name="URN" type="xs:anyURI" />
        </xs:choice>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="DataStructureEnumerationSchemeRefType">
    <xs:annotation>
      <xs:documentation>DataStructureEnumerationSchemeRefType contains the reference fields for referencing any item scheme that is allowable as the enumeration of the representation of a data structure definition component.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="ItemSchemeRefType">
        <xs:attribute name="class" type="DimensionEumerationSchemeTypeCodelistType" use="required" />
        <xs:attribute name="package" type="ItemSchemePackageTypeCodelistType" use="required" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="MetadataStructureReferenceType">
    <xs:annotation>
      <xs:documentation>MetadataStructureReferenceType is a type for referencing a metadata structure definition object. It consists of a URN and/or a complete set of reference fields.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="StructureReferenceBaseType">
        <xs:choice>
          <xs:sequence>
            <xs:element form="unqualified" name="Ref" type="MetadataStructureRefType" />
            <xs:element minOccurs="0" form="unqualified" name="URN" type="xs:anyURI" />
          </xs:sequence>
          <xs:element form="unqualified" name="URN" type="xs:anyURI" />
        </xs:choice>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="MetadataStructureRefType">
    <xs:annotation>
      <xs:documentation>MetadataStructureRefType contains a set of reference fields for a metadata structure definition.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="StructureRefBaseType">
        <xs:attribute fixed="MetadataStructure" name="class" type="StructureTypeCodelistType" use="optional" />
        <xs:attribute fixed="metadatastructure" name="package" type="StructurePackageTypeCodelistType" use="optional" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="MetadataTargetReferenceType">
    <xs:annotation>
      <xs:documentation>MetadataTargetReferenceType is a type for referencing a metadata target object. It consists of a URN and/or a complete set of reference fields.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="ComponentListReferenceType">
        <xs:choice>
          <xs:sequence>
            <xs:element form="unqualified" name="Ref" type="MetadataTargetRefType" />
            <xs:element minOccurs="0" form="unqualified" name="URN" type="xs:anyURI" />
          </xs:sequence>
          <xs:element form="unqualified" name="URN" type="xs:anyURI" />
        </xs:choice>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="MetadataTargetRefType">
    <xs:annotation>
      <xs:documentation>MetadataTargetRefType contains a reference to a metadata target within a metadata structure definition.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="ComponentListRefBaseType">
        <xs:attribute name="id" type="IDType" use="required" />
        <xs:attribute fixed="MetadataTarget" name="class" type="ComponentListTypeCodelistType" use="optional" />
        <xs:attribute fixed="metadatastructure" name="package" type="StructurePackageTypeCodelistType" use="optional" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="LocalMetadataTargetReferenceType">
    <xs:annotation>
      <xs:documentation>LocalMetadataTargetReferenceType is a type for referencing a metadata target locally, where the reference to the metadata structure definition which defines it is provided in another context (for example the metadata structure definition in which the reference occurs).</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="LocalComponentListReferenceType">
        <xs:sequence>
          <xs:element form="unqualified" name="Ref" type="LocalMetadataTargetRefType" />
        </xs:sequence>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="LocalMetadataTargetRefType">
    <xs:annotation>
      <xs:documentation>LocalMetadataTargetRefType contains a local reference to a metadata target object.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="LocalComponentListRefBaseType">
        <xs:attribute fixed="MetadataTarget" name="class" type="ComponentListTypeCodelistType" use="optional" />
        <xs:attribute fixed="metadatastructure" name="package" type="StructurePackageTypeCodelistType" use="optional" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="ConstraintTargetReferenceType">
    <xs:annotation>
      <xs:documentation>ConstraintTargetReferenceType is a type for referencing a constraint target object. It consists of a URN and/or a complete set of reference fields.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="ComponentReferenceType">
        <xs:choice>
          <xs:sequence>
            <xs:element form="unqualified" name="Ref" type="ConstraintTargetRefType" />
            <xs:element minOccurs="0" form="unqualified" name="URN" type="xs:anyURI" />
          </xs:sequence>
          <xs:element form="unqualified" name="URN" type="xs:anyURI" />
        </xs:choice>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="ConstraintTargetRefType">
    <xs:annotation>
      <xs:documentation>ConstraintTargetRefType contains a reference to a constraint target within a metadata target of a data structure definition.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="ComponentRefBaseType">
        <xs:attribute name="containerID" type="IDType" use="required" />
        <xs:attribute fixed="CONSTRAINT_TARGET" name="id" type="IDType" use="required" />
        <xs:attribute fixed="ConstraintTarget" name="class" type="ComponentTypeCodelistType" use="optional" />
        <xs:attribute fixed="metadatastructure" name="package" type="StructurePackageTypeCodelistType" use="optional" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="DataSetTargetReferenceType">
    <xs:annotation>
      <xs:documentation>DataSetTargetReferenceType is a type for referencing a data set target object. It consists of a URN and/or a complete set of reference fields.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="ComponentReferenceType">
        <xs:choice>
          <xs:sequence>
            <xs:element form="unqualified" name="Ref" type="DataSetTargetRefType" />
            <xs:element minOccurs="0" form="unqualified" name="URN" type="xs:anyURI" />
          </xs:sequence>
          <xs:element form="unqualified" name="URN" type="xs:anyURI" />
        </xs:choice>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="DataSetTargetRefType">
    <xs:annotation>
      <xs:documentation>DataSetTargetRefType contains a reference to a data set target within a metadata target of a data structure definition.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="ComponentRefBaseType">
        <xs:attribute name="containerID" type="IDType" use="required" />
        <xs:attribute fixed="DATA_SET_TARGET" name="id" type="IDType" use="required" />
        <xs:attribute fixed="DataSetTarget" name="class" type="ComponentTypeCodelistType" use="optional" />
        <xs:attribute fixed="metadatastructure" name="package" type="StructurePackageTypeCodelistType" use="optional" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="KeyDescriptorValuesTargetReferenceType">
    <xs:annotation>
      <xs:documentation>KeyDescriptorValuesTargetType is a type for referencing a key descriptor values target object. It consists of a URN and/or a complete set of reference fields.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="ComponentReferenceType">
        <xs:choice>
          <xs:sequence>
            <xs:element form="unqualified" name="Ref" type="KeyDescriptorValuesTargetRefType" />
            <xs:element minOccurs="0" form="unqualified" name="URN" type="xs:anyURI" />
          </xs:sequence>
          <xs:element form="unqualified" name="URN" type="xs:anyURI" />
        </xs:choice>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="KeyDescriptorValuesTargetRefType">
    <xs:annotation>
      <xs:documentation>KeyDescriptorValuesTargetRefType contains a reference to a key descriptor values target within a metadata target of a data structure definition.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="ComponentRefBaseType">
        <xs:attribute name="containerID" type="IDType" use="required" />
        <xs:attribute fixed="DIMENSION_DESCRIPTOR_VALUES_TARGET" name="id" type="IDType" use="required" />
        <xs:attribute fixed="DimensionDescriptorValuesTarget" name="class" type="ComponentTypeCodelistType" use="optional" />
        <xs:attribute fixed="metadatastructure" name="package" type="StructurePackageTypeCodelistType" use="optional" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="ReportPeriodTargetReferenceType">
    <xs:annotation>
      <xs:documentation>ReportPeriodTargetReferenceType is a type for referencing a report period target object. It consists of a URN and/or a complete set of reference fields.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="ComponentReferenceType">
        <xs:choice>
          <xs:sequence>
            <xs:element form="unqualified" name="Ref" type="ReportPeriodTargetRefType" />
            <xs:element minOccurs="0" form="unqualified" name="URN" type="xs:anyURI" />
          </xs:sequence>
          <xs:element form="unqualified" name="URN" type="xs:anyURI" />
        </xs:choice>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="ReportPeriodTargetRefType">
    <xs:annotation>
      <xs:documentation>ReportPeriodTargetRefType contains a reference to a report period target within a metadata target of a data structure definition.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="ComponentRefBaseType">
        <xs:attribute name="containerID" type="IDType" use="required" />
        <xs:attribute fixed="REPORT_PERIOD_TARGET" name="id" type="IDType" use="required" />
        <xs:attribute fixed="ReportPeriodTarget" name="class" type="ComponentTypeCodelistType" use="optional" />
        <xs:attribute fixed="metadatastructure" name="package" type="StructurePackageTypeCodelistType" use="optional" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="IdentifiableObjectTargetReferenceType">
    <xs:annotation>
      <xs:documentation>IdentifiableObjectTargetReferenceType is a type for referencing an identifiable object target object. It consists of a URN and/or a complete set of reference fields.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="ComponentReferenceType">
        <xs:choice>
          <xs:sequence>
            <xs:element form="unqualified" name="Ref" type="IdentifiableObjectTargetRefType" />
            <xs:element minOccurs="0" form="unqualified" name="URN" type="xs:anyURI" />
          </xs:sequence>
          <xs:element form="unqualified" name="URN" type="xs:anyURI" />
        </xs:choice>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="IdentifiableObjectTargetRefType">
    <xs:annotation>
      <xs:documentation>IdentifiableObjectTargetRefType contains a reference to an identifiable object target within a metadata target of a data structure definition.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="ComponentRefBaseType">
        <xs:attribute name="id" type="IDType" use="required" />
        <xs:attribute fixed="IdentifiableObjectTarget" name="class" type="ComponentTypeCodelistType" use="optional" />
        <xs:attribute fixed="metadatastructure" name="package" type="StructurePackageTypeCodelistType" use="optional" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="LocalTargetObjectReferenceType">
    <xs:annotation>
      <xs:documentation>LocalTargetObjectReferenceType is a type for referencing any type of target object within a metadata target locally, where the references to the metadata target and the  metadata structure definition which defines the target reference are provided in another context.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="LocalComponentReferenceBaseType">
        <xs:sequence>
          <xs:element form="unqualified" name="Ref" type="LocalTargetObjectRefType" />
        </xs:sequence>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="LocalTargetObjectRefType">
    <xs:annotation>
      <xs:documentation>LocalTargetObjectRefType contains the reference fields for referencing a target object locally.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="LocalComponentRefBaseType">
        <xs:attribute name="class" type="TargetObjectTypeCodelistType" use="required" />
        <xs:attribute fixed="metadatastructure" name="package" type="StructurePackageTypeCodelistType" use="optional" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="ReportStructureReferenceType">
    <xs:annotation>
      <xs:documentation>ReportStructureReferenceType is a type for referencing a report structure object. It consists of a URN and/or a complete set of reference fields.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="ComponentListReferenceType">
        <xs:choice>
          <xs:sequence>
            <xs:element form="unqualified" name="Ref" type="ReportStructureRefType" />
            <xs:element minOccurs="0" form="unqualified" name="URN" type="xs:anyURI" />
          </xs:sequence>
          <xs:element form="unqualified" name="URN" type="xs:anyURI" />
        </xs:choice>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="ReportStructureRefType">
    <xs:annotation>
      <xs:documentation>ReportStructureRefType contains a reference to a report structure within a metadata structure definition.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="ComponentListRefBaseType">
        <xs:attribute name="id" type="IDType" use="required" />
        <xs:attribute fixed="ReportStructure" name="class" type="ComponentListTypeCodelistType" use="optional" />
        <xs:attribute fixed="metadatastructure" name="package" type="StructurePackageTypeCodelistType" use="optional" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="LocalReportStructureReferenceType">
    <xs:annotation>
      <xs:documentation>LocalReportStructureReferenceType is a type for referencing a report structure locally, where the reference to the metadata structure definition which defines it is provided in another context (for example the metadata structure definition in which the reference occurs).</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="LocalComponentListReferenceType">
        <xs:sequence>
          <xs:element form="unqualified" name="Ref" type="LocalReportStructureRefType" />
        </xs:sequence>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="LocalReportStructureRefType">
    <xs:annotation>
      <xs:documentation>LocalReportStructureRefType contains a local reference to a report structure object.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="LocalComponentListRefBaseType">
        <xs:attribute fixed="ReportStructure" name="class" type="ComponentListTypeCodelistType" use="optional" />
        <xs:attribute fixed="metadatastructure" name="package" type="StructurePackageTypeCodelistType" use="optional" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="MetadataAttributeReferenceType">
    <xs:annotation>
      <xs:documentation>MetadataAttributeReferenceType is a type for referencing a metadata attribute object. It consists of a URN and/or a complete set of reference fields.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="ComponentReferenceType">
        <xs:choice>
          <xs:sequence>
            <xs:element form="unqualified" name="Ref" type="MetadataAttributeRefType" />
            <xs:element minOccurs="0" form="unqualified" name="URN" type="xs:anyURI" />
          </xs:sequence>
          <xs:element form="unqualified" name="URN" type="xs:anyURI" />
        </xs:choice>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="MetadataAttributeRefType">
    <xs:annotation>
      <xs:documentation>MetadataAttributeRefType contains a reference to a metadata attribute within a report structure in a metadata structure definition.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="ComponentRefBaseType">
        <xs:attribute name="containerID" type="IDType" use="required" />
        <xs:attribute name="id" type="NestedIDType" use="required" />
        <xs:attribute fixed="MetadataAttribute" name="class" type="ComponentTypeCodelistType" use="optional" />
        <xs:attribute fixed="metadatastructure" name="package" type="StructurePackageTypeCodelistType" use="optional" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="LocalMetadataStructureComponentReferenceType">
    <xs:annotation>
      <xs:documentation>LocalMetadataStructureComponentReferenceType is a type for referencing any type of metadata structure component locally, where the reference for the metadata structure definition which defines the components is available in another context.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="LocalComponentListComponentReferenceBaseType">
        <xs:sequence>
          <xs:element form="unqualified" name="Ref" type="LocalMetadataStructureComponentRefType" />
        </xs:sequence>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="LocalMetadataStructureComponentRefType">
    <xs:annotation>
      <xs:documentation>LocalMetadataStructureComponentRefType contains the reference fields for referencing any metadata structure component locally. This reference must specify the class of the component being referenced.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="LocalComponentListComponentRefBaseType">
        <xs:attribute name="containerID" type="IDType" use="required" />
        <xs:attribute name="class" type="MetadataStructureComponentTypeCodelistType" use="required" />
        <xs:attribute fixed="metadatastructure" name="package" type="StructurePackageTypeCodelistType" use="optional" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="ProvisionAgreementReferenceType">
    <xs:annotation>
      <xs:documentation>ProvisionAgreementReferenceType is a type for referencing a provision agreement. It consists of a URN and/or a complete set of reference fields.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="MaintainableReferenceBaseType">
        <xs:choice>
          <xs:sequence>
            <xs:element form="unqualified" name="Ref" type="ProvisionAgreementRefType" />
            <xs:element minOccurs="0" form="unqualified" name="URN" type="xs:anyURI" />
          </xs:sequence>
          <xs:element form="unqualified" name="URN" type="xs:anyURI" />
        </xs:choice>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="ProvisionAgreementRefType">
    <xs:annotation>
      <xs:documentation>ProvisionAgreementRefType contains a set of reference fields for a provision agreement.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="MaintainableRefBaseType">
        <xs:attribute fixed="ProvisionAgreement" name="class" type="MaintainableTypeCodelistType" use="optional" />
        <xs:attribute fixed="registry" name="package" type="PackageTypeCodelistType" use="optional" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="ProcessReferenceType">
    <xs:annotation>
      <xs:documentation>ProcessReferenceType is a type for referencing a process object. It consists of a URN and/or a complete set of reference fields.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="MaintainableReferenceBaseType">
        <xs:choice>
          <xs:sequence>
            <xs:element form="unqualified" name="Ref" type="ProcessRefType" />
            <xs:element minOccurs="0" form="unqualified" name="URN" type="xs:anyURI" />
          </xs:sequence>
          <xs:element form="unqualified" name="URN" type="xs:anyURI" />
        </xs:choice>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="ProcessRefType">
    <xs:annotation>
      <xs:documentation>ProcessRefType contains a set of reference fields for a process.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="MaintainableRefBaseType">
        <xs:attribute fixed="Process" name="class" type="MaintainableTypeCodelistType" use="optional" />
        <xs:attribute fixed="process" name="package" type="PackageTypeCodelistType" use="optional" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="ProcessStepReferenceType">
    <xs:annotation>
      <xs:documentation>ProcessStepReferenceType is a type for referencing a process step object. It consists of a URN and/or a complete set of reference fields.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="ChildObjectReferenceType">
        <xs:choice>
          <xs:sequence>
            <xs:element form="unqualified" name="Ref" type="ProcessStepRefType" />
            <xs:element minOccurs="0" form="unqualified" name="URN" type="xs:anyURI" />
          </xs:sequence>
          <xs:element form="unqualified" name="URN" type="xs:anyURI" />
        </xs:choice>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="ProcessStepRefType">
    <xs:annotation>
      <xs:documentation>ProcessStepRefType provides for a reference to a process step through its id. Support for referencing nested process steps is provided through a nested identifier.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="ChildObjectRefBaseType">
        <xs:attribute fixed="ProcessStep" name="class" type="ObjectTypeCodelistType" use="optional" />
        <xs:attribute fixed="process" name="package" type="PackageTypeCodelistType" use="optional" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="LocalProcessStepReferenceType">
    <xs:annotation>
      <xs:documentation>LocalProcessStepReferenceType is a type for referencing a process step locally, where the reference to the process which defines it is provided in another context (for example the metadata structure definition in which the reference occurs).</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="LocalIdentifiableReferenceType">
        <xs:sequence>
          <xs:element form="unqualified" name="Ref" type="LocalProcessStepRefType" />
        </xs:sequence>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="LocalProcessStepRefType">
    <xs:annotation>
      <xs:documentation>LocalProcessStepRefType contains a local reference to a process step object.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="LocalIdentifiableRefBaseType">
        <xs:attribute fixed="ProcessStep" name="class" type="ObjectTypeCodelistType" use="optional" />
        <xs:attribute fixed="process" name="package" type="PackageTypeCodelistType" use="optional" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="TransitionReferenceType">
    <xs:annotation>
      <xs:documentation>TransiationReferenceType is a type for referencing a process step object. It consists of a URN and/or a complete set of reference fields.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="ContainerChildObjectReferenceType">
        <xs:choice>
          <xs:sequence>
            <xs:element form="unqualified" name="Ref" type="TransitionRefType" />
            <xs:element minOccurs="0" form="unqualified" name="URN" type="xs:anyURI" />
          </xs:sequence>
          <xs:element form="unqualified" name="URN" type="xs:anyURI" />
        </xs:choice>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="TransitionRefType">
    <xs:annotation>
      <xs:documentation>TransitionRefType provides for a reference to a transition definition in process step through its id.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="ContainerChildObjectRefBaseType">
        <xs:attribute name="containerID" type="NestedIDType" use="required" />
        <xs:attribute fixed="Transition" name="class" type="ObjectTypeCodelistType" use="optional" />
        <xs:attribute fixed="process" name="package" type="PackageTypeCodelistType" use="optional" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="StructureSetReferenceType">
    <xs:annotation>
      <xs:documentation>StructureSetReferenceType is a type for referencing a structure set object. It consists of a URN and/or a complete set of reference fields.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="MaintainableReferenceBaseType">
        <xs:choice>
          <xs:sequence>
            <xs:element form="unqualified" name="Ref" type="StructureSetRefType" />
            <xs:element minOccurs="0" form="unqualified" name="URN" type="xs:anyURI" />
          </xs:sequence>
          <xs:element form="unqualified" name="URN" type="xs:anyURI" />
        </xs:choice>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="StructureSetRefType">
    <xs:annotation>
      <xs:documentation>StructureSetRefType contains a set of reference fields for a structure set.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="MaintainableRefBaseType">
        <xs:attribute fixed="StructureSet" name="class" type="MaintainableTypeCodelistType" use="optional" />
        <xs:attribute fixed="mapping" name="package" type="PackageTypeCodelistType" use="optional" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="StructureMapReferenceType">
    <xs:annotation>
      <xs:documentation>StructureMapReferenceType is a type for referencing a structure map object. It consists of a URN and/or a complete set of reference fields.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="ChildObjectReferenceType">
        <xs:choice>
          <xs:sequence>
            <xs:element form="unqualified" name="Ref" type="StructureMapRefType" />
            <xs:element minOccurs="0" form="unqualified" name="URN" type="xs:anyURI" />
          </xs:sequence>
          <xs:element form="unqualified" name="URN" type="xs:anyURI" />
        </xs:choice>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="StructureMapRefType">
    <xs:annotation>
      <xs:documentation>StructureMapRefType contains fields for referencing a structure map within a structure set.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="ChildObjectRefBaseType">
        <xs:attribute name="id" type="IDType" use="required" />
        <xs:attribute fixed="StructureMap" name="class" type="ObjectTypeCodelistType" use="optional" />
        <xs:attribute fixed="mapping" name="package" type="PackageTypeCodelistType" use="optional" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="CategorySchemeMapReferenceType">
    <xs:annotation>
      <xs:documentation>CategorySchemeMapReferenceType is a type for referencing a category scheme map object. It consists of a URN and/or a complete set of reference fields.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="ChildObjectReferenceType">
        <xs:choice>
          <xs:sequence>
            <xs:element form="unqualified" name="Ref" type="CategorySchemeMapRefType" />
            <xs:element minOccurs="0" form="unqualified" name="URN" type="xs:anyURI" />
          </xs:sequence>
          <xs:element form="unqualified" name="URN" type="xs:anyURI" />
        </xs:choice>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="CategorySchemeMapRefType">
    <xs:annotation>
      <xs:documentation>CategorySchemeMapRefType contains a set of reference fields for a category scheme map.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="ChildObjectRefBaseType">
        <xs:attribute name="id" type="IDType" use="required" />
        <xs:attribute fixed="CategorySchemeMap" name="class" type="ObjectTypeCodelistType" use="optional" />
        <xs:attribute fixed="mapping" name="package" type="PackageTypeCodelistType" use="optional" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="CodelistMapReferenceType">
    <xs:annotation>
      <xs:documentation>CodelistMapReferenceType is a type for referencing a codelist map object. It consists of a URN and/or a complete set of reference fields.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="ChildObjectReferenceType">
        <xs:choice>
          <xs:sequence>
            <xs:element form="unqualified" name="Ref" type="CodelistMapRefType" />
            <xs:element minOccurs="0" form="unqualified" name="URN" type="xs:anyURI" />
          </xs:sequence>
          <xs:element form="unqualified" name="URN" type="xs:anyURI" />
        </xs:choice>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="CodelistMapRefType">
    <xs:annotation>
      <xs:documentation>CodelistMapRefType contains a set of reference fields for a codelist map.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="ChildObjectRefBaseType">
        <xs:attribute name="id" type="IDType" use="required" />
        <xs:attribute fixed="CodelistMap" name="class" type="ObjectTypeCodelistType" use="optional" />
        <xs:attribute fixed="mapping" name="package" type="PackageTypeCodelistType" use="optional" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="LocalCodelistMapReferenceType">
    <xs:annotation>
      <xs:documentation>LocalCodelistMapReferenceType is a type for referencing a codelist map object where the reference to the structure set which defines it is provided in another context (e.g. the structure set in which this reference occurs).</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="ReferenceType">
        <xs:sequence>
          <xs:element form="unqualified" name="Ref" type="LocalCodelistMapRefType" />
        </xs:sequence>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="LocalCodelistMapRefType">
    <xs:annotation>
      <xs:documentation>LocalCodelistMapRefType contains a set of reference fields for a codelist map locally.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="LocalIdentifiableRefBaseType">
        <xs:attribute name="containerID" type="NestedIDType" use="prohibited" />
        <xs:attribute fixed="CodelistMap" name="class" type="ObjectTypeCodelistType" use="optional" />
        <xs:attribute fixed="mapping" name="package" type="PackageTypeCodelistType" use="optional" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="ConceptSchemeMapReferenceType">
    <xs:annotation>
      <xs:documentation>ConceptSchemeMapReferenceType is a type for referencing a concept scheme map object. It consists of a URN and/or a complete set of reference fields.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="ChildObjectReferenceType">
        <xs:choice>
          <xs:sequence>
            <xs:element form="unqualified" name="Ref" type="ConceptSchemeMapRefType" />
            <xs:element minOccurs="0" form="unqualified" name="URN" type="xs:anyURI" />
          </xs:sequence>
          <xs:element form="unqualified" name="URN" type="xs:anyURI" />
        </xs:choice>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="ConceptSchemeMapRefType">
    <xs:annotation>
      <xs:documentation>ConceptSchemeMapRefType contains a set of reference fields for a concept scheme map.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="ChildObjectRefBaseType">
        <xs:attribute name="id" type="IDType" use="required" />
        <xs:attribute fixed="ConceptSchemeMap" name="class" type="ObjectTypeCodelistType" use="optional" />
        <xs:attribute fixed="mapping" name="package" type="PackageTypeCodelistType" use="optional" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="OrganisationSchemeMapReferenceType">
    <xs:annotation>
      <xs:documentation>OrganisationSchemeMapReferenceType is a type for referencing a organisation scheme map object. It consists of a URN and/or a complete set of reference fields.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="ChildObjectReferenceType">
        <xs:choice>
          <xs:sequence>
            <xs:element form="unqualified" name="Ref" type="OrganisationSchemeMapRefType" />
            <xs:element minOccurs="0" form="unqualified" name="URN" type="xs:anyURI" />
          </xs:sequence>
          <xs:element form="unqualified" name="URN" type="xs:anyURI" />
        </xs:choice>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="OrganisationSchemeMapRefType">
    <xs:annotation>
      <xs:documentation>OrganisationSchemeMapRefType contains a set of reference fields for an organisation scheme map.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="ChildObjectRefBaseType">
        <xs:attribute name="id" type="IDType" use="required" />
        <xs:attribute fixed="OrganisationSchemeMap" name="class" type="ObjectTypeCodelistType" use="optional" />
        <xs:attribute fixed="mapping" name="package" type="PackageTypeCodelistType" use="optional" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="SetReferenceType">
    <xs:annotation>
      <xs:documentation>SetReferenceType defines the structure of a reference to a data/metadata set. A full reference to a data provider and the identifier for the data set must be provided. Note that this is not derived from the base reference structure since data/metadata sets are not technically identifiable.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="DataProvider" type="DataProviderReferenceType">
        <xs:annotation>
          <xs:documentation>DataProvider references a the provider of the data/metadata set. A URN and/or a complete set of reference fields must be provided.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="ID" type="IDType">
        <xs:annotation>
          <xs:documentation>ID contains the identifier of the data/metadata set being referenced.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:simpleType name="PackageTypeCodelistType">
    <xs:annotation>
      <xs:documentation>PackageTypeCodelistType provides an enumeration of all SDMX package names.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="base" />
      <xs:enumeration value="datastructure" />
      <xs:enumeration value="metadatastructure" />
      <xs:enumeration value="process" />
      <xs:enumeration value="registry" />
      <xs:enumeration value="mapping" />
      <xs:enumeration value="codelist" />
      <xs:enumeration value="categoryscheme" />
      <xs:enumeration value="conceptscheme" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="ItemSchemePackageTypeCodelistType">
    <xs:annotation>
      <xs:documentation>ItemSchemePackageTypeCodelistType provides an enumeration of all SDMX packages which contain item schemes.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="PackageTypeCodelistType">
      <xs:enumeration value="base" />
      <xs:enumeration value="codelist" />
      <xs:enumeration value="categoryscheme" />
      <xs:enumeration value="conceptscheme" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="StructurePackageTypeCodelistType">
    <xs:annotation>
      <xs:documentation>StructurePackageTypeCodelistType provides an enumeration of all SDMX packages which contain structure and structure usages.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="PackageTypeCodelistType">
      <xs:enumeration value="datastructure" />
      <xs:enumeration value="metadatastructure" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="ObjectTypeCodelistType">
    <xs:annotation>
      <xs:documentation>ObjectTypeCodelistType provides an enumeration of all objects outside of the base infomration model class. This includes some abstract object types such as Organsiation and Constraint.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="Any" />
      <xs:enumeration value="Agency" />
      <xs:enumeration value="AgencyScheme" />
      <xs:enumeration value="AttachmentConstraint" />
      <xs:enumeration value="Attribute" />
      <xs:enumeration value="AttributeDescriptor" />
      <xs:enumeration value="Categorisation" />
      <xs:enumeration value="Category" />
      <xs:enumeration value="CategorySchemeMap" />
      <xs:enumeration value="CategoryScheme" />
      <xs:enumeration value="Code" />
      <xs:enumeration value="CodeMap" />
      <xs:enumeration value="Codelist" />
      <xs:enumeration value="CodelistMap" />
      <xs:enumeration value="ComponentMap" />
      <xs:enumeration value="Concept" />
      <xs:enumeration value="ConceptMap" />
      <xs:enumeration value="ConceptScheme" />
      <xs:enumeration value="ConceptSchemeMap" />
      <xs:enumeration value="Constraint" />
      <xs:enumeration value="ConstraintTarget" />
      <xs:enumeration value="ContentConstraint" />
      <xs:enumeration value="Dataflow" />
      <xs:enumeration value="DataConsumer" />
      <xs:enumeration value="DataConsumerScheme" />
      <xs:enumeration value="DataProvider" />
      <xs:enumeration value="DataProviderScheme" />
      <xs:enumeration value="DataSetTarget" />
      <xs:enumeration value="DataStructure" />
      <xs:enumeration value="Dimension" />
      <xs:enumeration value="DimensionDescriptor" />
      <xs:enumeration value="DimensionDescriptorValuesTarget" />
      <xs:enumeration value="GroupDimensionDescriptor" />
      <xs:enumeration value="HierarchicalCode" />
      <xs:enumeration value="HierarchicalCodelist" />
      <xs:enumeration value="Hierarchy" />
      <xs:enumeration value="HybridCodelistMap" />
      <xs:enumeration value="HybridCodeMap" />
      <xs:enumeration value="IdentifiableObjectTarget" />
      <xs:enumeration value="Level" />
      <xs:enumeration value="MeasureDescriptor" />
      <xs:enumeration value="MeasureDimension" />
      <xs:enumeration value="Metadataflow" />
      <xs:enumeration value="MetadataAttribute" />
      <xs:enumeration value="MetadataSet" />
      <xs:enumeration value="MetadataStructure" />
      <xs:enumeration value="MetadataTarget" />
      <xs:enumeration value="Organisation" />
      <xs:enumeration value="OrganisationMap" />
      <xs:enumeration value="OrganisationScheme" />
      <xs:enumeration value="OrganisationSchemeMap" />
      <xs:enumeration value="OrganisationUnit" />
      <xs:enumeration value="OrganisationUnitScheme" />
      <xs:enumeration value="PrimaryMeasure" />
      <xs:enumeration value="Process" />
      <xs:enumeration value="ProcessStep" />
      <xs:enumeration value="ProvisionAgreement" />
      <xs:enumeration value="ReportingCategory" />
      <xs:enumeration value="ReportingCategoryMap" />
      <xs:enumeration value="ReportingTaxonomy" />
      <xs:enumeration value="ReportingTaxonomyMap" />
      <xs:enumeration value="ReportingYearStartDay" />
      <xs:enumeration value="ReportPeriodTarget" />
      <xs:enumeration value="ReportStructure" />
      <xs:enumeration value="StructureMap" />
      <xs:enumeration value="StructureSet" />
      <xs:enumeration value="TimeDimension" />
      <xs:enumeration value="Transition" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="MaintainableTypeCodelistType">
    <xs:annotation>
      <xs:documentation>MaintainableTypeCodelistType provides an enumeration of all maintainable objects.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="ObjectTypeCodelistType">
      <xs:enumeration value="Any" />
      <xs:enumeration value="AgencyScheme" />
      <xs:enumeration value="AttachmentConstraint" />
      <xs:enumeration value="Categorisation" />
      <xs:enumeration value="CategoryScheme" />
      <xs:enumeration value="Codelist" />
      <xs:enumeration value="ConceptScheme" />
      <xs:enumeration value="Constraint" />
      <xs:enumeration value="ContentConstraint" />
      <xs:enumeration value="Dataflow" />
      <xs:enumeration value="DataConsumerScheme" />
      <xs:enumeration value="DataProviderScheme" />
      <xs:enumeration value="DataStructure" />
      <xs:enumeration value="HierarchicalCodelist" />
      <xs:enumeration value="Metadataflow" />
      <xs:enumeration value="MetadataStructure" />
      <xs:enumeration value="OrganisationScheme" />
      <xs:enumeration value="OrganisationUnitScheme" />
      <xs:enumeration value="Process" />
      <xs:enumeration value="ProvisionAgreement" />
      <xs:enumeration value="ReportingTaxonomy" />
      <xs:enumeration value="StructureSet" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="ConcreteMaintainableTypeCodelistType">
    <xs:annotation>
      <xs:documentation>ConcreteMaintainableTypeCodelistType provides an enumeration of all concrete maintainable objects.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="MaintainableTypeCodelistType">
      <xs:enumeration value="AgencyScheme" />
      <xs:enumeration value="AttachmentConstraint" />
      <xs:enumeration value="Categorisation" />
      <xs:enumeration value="CategoryScheme" />
      <xs:enumeration value="Codelist" />
      <xs:enumeration value="ConceptScheme" />
      <xs:enumeration value="ContentConstraint" />
      <xs:enumeration value="Dataflow" />
      <xs:enumeration value="DataConsumerScheme" />
      <xs:enumeration value="DataProviderScheme" />
      <xs:enumeration value="DataStructure" />
      <xs:enumeration value="HierarchicalCodelist" />
      <xs:enumeration value="Metadataflow" />
      <xs:enumeration value="MetadataStructure" />
      <xs:enumeration value="OrganisationUnitScheme" />
      <xs:enumeration value="Process" />
      <xs:enumeration value="ProvisionAgreement" />
      <xs:enumeration value="ReportingTaxonomy" />
      <xs:enumeration value="StructureSet" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="CodelistTypeCodelistType">
    <xs:annotation>
      <xs:documentation>CodelistTypeCodelistType provides an enumeration of all codelist objects.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="MaintainableTypeCodelistType">
      <xs:enumeration value="Codelist" />
      <xs:enumeration value="HierarchicalCodelist" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="CodeTypeCodelistType">
    <xs:annotation>
      <xs:documentation>CodeTypeCodelistType provides an enumeration of all code objects.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="ObjectTypeCodelistType">
      <xs:enumeration value="Code" />
      <xs:enumeration value="HierarchicalCode" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="ConstraintTypeCodelistType">
    <xs:annotation>
      <xs:documentation>ConstraintTypeCodelistType provides an enumeration of all constraint objects.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="MaintainableTypeCodelistType">
      <xs:enumeration value="AttachmentConstraint" />
      <xs:enumeration value="ContentConstraint" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="ItemSchemeTypeCodelistType">
    <xs:annotation>
      <xs:documentation>ItemSchemeTypeCodelistType provides an enumeration of all item scheme objects.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="MaintainableTypeCodelistType">
      <xs:enumeration value="AgencyScheme" />
      <xs:enumeration value="CategoryScheme" />
      <xs:enumeration value="Codelist" />
      <xs:enumeration value="ConceptScheme" />
      <xs:enumeration value="DataConsumerScheme" />
      <xs:enumeration value="DataProviderScheme" />
      <xs:enumeration value="OrganisationUnitScheme" />
      <xs:enumeration value="ReportingTaxonomy" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="OrganisationSchemeTypeCodelistType">
    <xs:annotation>
      <xs:documentation>OrganisationSchemeTypeCodelistType provides an enumeration of all organisation scheme objects.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="ItemSchemeTypeCodelistType">
      <xs:enumeration value="AgencyScheme" />
      <xs:enumeration value="DataConsumerScheme" />
      <xs:enumeration value="DataProviderScheme" />
      <xs:enumeration value="OrganisationUnitScheme" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="OrganisationTypeCodelistType">
    <xs:annotation>
      <xs:documentation>OrganisationTypeCodelistType provides an enumeration of all organisation objects.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="ItemTypeCodelistType">
      <xs:enumeration value="Agency" />
      <xs:enumeration value="DataConsumer" />
      <xs:enumeration value="DataProvider" />
      <xs:enumeration value="OrganisationUnit" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="StructureOrUsageTypeCodelistType">
    <xs:annotation>
      <xs:documentation>StructureOrUsageTypeCodelistType provides an enumeration all structure and structure usage objects</xs:documentation>
    </xs:annotation>
    <xs:restriction base="MaintainableTypeCodelistType">
      <xs:enumeration value="Dataflow" />
      <xs:enumeration value="DataStructure" />
      <xs:enumeration value="Metadataflow" />
      <xs:enumeration value="MetadataStructure" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="StructureTypeCodelistType">
    <xs:annotation>
      <xs:documentation>StructureTypeCodelistType provides an enumeration all structure objects</xs:documentation>
    </xs:annotation>
    <xs:restriction base="StructureOrUsageTypeCodelistType">
      <xs:enumeration value="DataStructure" />
      <xs:enumeration value="MetadataStructure" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="StructureUsageTypeCodelistType">
    <xs:annotation>
      <xs:documentation>StructureUsageTypeCodelistType provides an enumeration all structure usage objects</xs:documentation>
    </xs:annotation>
    <xs:restriction base="StructureOrUsageTypeCodelistType">
      <xs:enumeration value="Dataflow" />
      <xs:enumeration value="Metadataflow" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="ItemTypeCodelistType">
    <xs:annotation>
      <xs:documentation>ItemTypeCodelistType provides an enumeration of all item objects.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="ObjectTypeCodelistType">
      <xs:enumeration value="Agency" />
      <xs:enumeration value="Category" />
      <xs:enumeration value="Code" />
      <xs:enumeration value="Concept" />
      <xs:enumeration value="DataConsumer" />
      <xs:enumeration value="DataProvider" />
      <xs:enumeration value="OrganisationUnit" />
      <xs:enumeration value="ReportingCategory" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="ComponentListTypeCodelistType">
    <xs:annotation>
      <xs:documentation>ComponentListTypeCodelistType provides an enumeration of all component list objects.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="ObjectTypeCodelistType">
      <xs:enumeration value="AttributeDescriptor" />
      <xs:enumeration value="DimensionDescriptor" />
      <xs:enumeration value="GroupDimensionDescriptor" />
      <xs:enumeration value="MeasureDescriptor" />
      <xs:enumeration value="MetadataTarget" />
      <xs:enumeration value="ReportStructure" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="ComponentTypeCodelistType">
    <xs:annotation>
      <xs:documentation>ComponentTypeCodelistType provides an enumeration of all component objects.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="ObjectTypeCodelistType">
      <xs:enumeration value="Attribute" />
      <xs:enumeration value="ConstraintTarget" />
      <xs:enumeration value="DataSetTarget" />
      <xs:enumeration value="Dimension" />
      <xs:enumeration value="IdentifiableObjectTarget" />
      <xs:enumeration value="DimensionDescriptorValuesTarget" />
      <xs:enumeration value="MeasureDimension" />
      <xs:enumeration value="MetadataAttribute" />
      <xs:enumeration value="PrimaryMeasure" />
      <xs:enumeration value="ReportingYearStartDay" />
      <xs:enumeration value="ReportPeriodTarget" />
      <xs:enumeration value="TimeDimension" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="DataStructureComponentTypeCodelistType">
    <xs:annotation>
      <xs:documentation>DataStructureComponentTypeCodelistType provides an enumeration of all data structure component objects, except for the primary measure.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="ComponentTypeCodelistType">
      <xs:enumeration value="Attribute" />
      <xs:enumeration value="Dimension" />
      <xs:enumeration value="MeasureDimension" />
      <xs:enumeration value="PrimaryMeasure" />
      <xs:enumeration value="ReportingYearStartDay" />
      <xs:enumeration value="TimeDimension" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="DimensionEumerationSchemeTypeCodelistType">
    <xs:annotation>
      <xs:documentation>DimensionEumerationSchemeTypeCodelistType provides an enumeration of all item schemes which are allowable as the representation of a data structure definition component.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="ItemSchemeTypeCodelistType">
      <xs:enumeration value="Codelist" />
      <xs:enumeration value="ConceptScheme" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="MetadataStructureComponentTypeCodelistType">
    <xs:annotation>
      <xs:documentation>MetadataStructureComponentTypeCodelistType provides an enumeration of all metadata structure component objects.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="ComponentTypeCodelistType">
      <xs:enumeration value="ConstraintTarget" />
      <xs:enumeration value="DataSetTarget" />
      <xs:enumeration value="IdentifiableObjectTarget" />
      <xs:enumeration value="DimensionDescriptorValuesTarget" />
      <xs:enumeration value="MetadataAttribute" />
      <xs:enumeration value="ReportPeriodTarget" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="DimensionTypeCodelistType">
    <xs:annotation>
      <xs:documentation>DimensionTypeCodelistType provides an enumeration of all dimension objects.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="ComponentTypeCodelistType">
      <xs:enumeration value="Dimension" />
      <xs:enumeration value="MeasureDimension" />
      <xs:enumeration value="TimeDimension" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="TargetObjectTypeCodelistType">
    <xs:annotation>
      <xs:documentation>TargetObjectTypeCodelistType provides an enumeration of all target object objects.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="ComponentTypeCodelistType">
      <xs:enumeration value="ConstraintTarget" />
      <xs:enumeration value="DataSetTarget" />
      <xs:enumeration value="IdentifiableObjectTarget" />
      <xs:enumeration value="DimensionDescriptorValuesTarget" />
      <xs:enumeration value="ReportPeriodTarget" />
    </xs:restriction>
  </xs:simpleType>
  <xs:element name="Any" type="EmptyType">
    <xs:annotation>
      <xs:documentation>Any is an empty element that denotes an object of any type.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="Agency" type="EmptyType">
    <xs:annotation>
      <xs:documentation>Agency is an empty element that denotes an agency object.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="AgencyScheme" type="EmptyType">
    <xs:annotation>
      <xs:documentation>AgencyScheme is an empty element that denotes an agency scheme object.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="AttachmentConstraint" type="EmptyType">
    <xs:annotation>
      <xs:documentation>AttachmentConstraint is an empty element that denotes an attachment constraint object.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="Attribute" type="EmptyType">
    <xs:annotation>
      <xs:documentation>Attribute is an empty element that denotes an attribute object.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="AttributeDescriptor" type="EmptyType">
    <xs:annotation>
      <xs:documentation>AttributeDescriptor is an empty element that denotes an attribute descriptor object.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="Categorisation" type="EmptyType">
    <xs:annotation>
      <xs:documentation>Categorisation is an empty element that denotes a categorisation object.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="Category" type="EmptyType">
    <xs:annotation>
      <xs:documentation>Category is an empty element that denotes a category object.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="CategorySchemeMap" type="EmptyType">
    <xs:annotation>
      <xs:documentation>CategorySchemeMap is an empty element that denotes a category scheme map object.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="CategoryScheme" type="EmptyType">
    <xs:annotation>
      <xs:documentation>CategoryScheme is an empty element that denotes a category scheme object.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="Code" type="EmptyType">
    <xs:annotation>
      <xs:documentation>Code is an empty element that denotes a code object.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="CodeMap" type="EmptyType">
    <xs:annotation>
      <xs:documentation>CodeMap is an empty element that denotes a code map object.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="Codelist" type="EmptyType">
    <xs:annotation>
      <xs:documentation>Codelist is an empty element that denotes a code list object.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="CodelistMap" type="EmptyType">
    <xs:annotation>
      <xs:documentation>CodelistMap is an empty element that denotes a code list map object.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="ComponentMap" type="EmptyType">
    <xs:annotation>
      <xs:documentation>ComponentMap is an empty element that denotes a component map object.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="Concept" type="EmptyType">
    <xs:annotation>
      <xs:documentation>Concept is an empty element that denotes a concept object.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="ConceptMap" type="EmptyType">
    <xs:annotation>
      <xs:documentation>ConceptMap is an empty element that denotes a concept map object.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="ConceptScheme" type="EmptyType">
    <xs:annotation>
      <xs:documentation>ConceptScheme is an empty element that denotes a concept scheme object.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="ConceptSchemeMap" type="EmptyType">
    <xs:annotation>
      <xs:documentation>ConceptSchemeMap is an empty element that denotes a concept scheme map object.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="ConstraintTarget" type="EmptyType">
    <xs:annotation>
      <xs:documentation>ConstraintTarget is an empty element that denotes a constraint target object.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="ContentConstraint" type="EmptyType">
    <xs:annotation>
      <xs:documentation>ContentConstraint is an empty element that denotes a content constraint object.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="Dataflow" type="EmptyType">
    <xs:annotation>
      <xs:documentation>Dataflow is an empty element that denotes a data flow object.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="DataConsumer" type="EmptyType">
    <xs:annotation>
      <xs:documentation>DataConsumer is an empty element that denotes a data consumer object.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="DataConsumerScheme" type="EmptyType">
    <xs:annotation>
      <xs:documentation>DataConsumerScheme is an empty element that denotes a data consumer scheme object.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="DataProvider" type="EmptyType">
    <xs:annotation>
      <xs:documentation>DataProvider is an empty element that denotes a data provider object.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="DataProviderScheme" type="EmptyType">
    <xs:annotation>
      <xs:documentation>DataProviderScheme is an empty element that denotes a data provider scheme object.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="DataSetTarget" type="EmptyType">
    <xs:annotation>
      <xs:documentation>DataSetTarget is an empty element that denotes a data set target object.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="DataStructure" type="EmptyType">
    <xs:annotation>
      <xs:documentation>DataStructure is an empty element that denotes a data structure definition object.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="Dimension" type="EmptyType">
    <xs:annotation>
      <xs:documentation>Dimension is an empty element that denotes a dimension object.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="DimensionDescriptor" type="EmptyType">
    <xs:annotation>
      <xs:documentation>DimensionDescriptor is an empty element that denotes a dimension descriptor object.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="DimensionDescriptorValuesTarget" type="EmptyType">
    <xs:annotation>
      <xs:documentation>DimensionDescriptorValuesTarget is an empty element that denotes a dimension descriptor values target object.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="GroupDimensionDescriptor" type="EmptyType">
    <xs:annotation>
      <xs:documentation>GroupDimensionDescriptor is an empty element that denotes a group dimension descriptor object.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="HierarchicalCode" type="EmptyType">
    <xs:annotation>
      <xs:documentation>HierarchicalCode is an empty element that denotes a hierarchical code object.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="HierarchicalCodelist" type="EmptyType">
    <xs:annotation>
      <xs:documentation>HierarchicalCodelist is an empty element that denotes a hierarchical codelist object.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="Hierarchy" type="EmptyType">
    <xs:annotation>
      <xs:documentation>Hierarchy is an empty element that denotes a hierarchy within a hiearcharchical codelist.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="HybridCodelistMap" type="EmptyType">
    <xs:annotation>
      <xs:documentation>HybridCodelistMap is an empty element that denotes a hybrid codelist map object.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="HybridCodeMap" type="EmptyType">
    <xs:annotation>
      <xs:documentation>HybridCodeMap is an empty element that denotes a hybrid code map object.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="IdentifiableObjectTarget" type="EmptyType">
    <xs:annotation>
      <xs:documentation>IdentifiableObjectTarget is an empty element that denotes an identifiable object target object.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="Level" type="EmptyType">
    <xs:annotation>
      <xs:documentation>Level is an empty element that denotes a level object.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="MeasureDescriptor" type="EmptyType">
    <xs:annotation>
      <xs:documentation>MeasureDescriptor is an empty element that denotes a measure descriptor object.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="MeasureDimension" type="EmptyType">
    <xs:annotation>
      <xs:documentation>MeasureDimension is an empty element that denotes a measure dimension object.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="Metadataflow" type="EmptyType">
    <xs:annotation>
      <xs:documentation>Metadataflow is an empty element that denotes a metadata flow object.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="MetadataAttribute" type="EmptyType">
    <xs:annotation>
      <xs:documentation>MetadataAttribute is an empty element that denotes a metadata attribute object.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="MetadataSet" type="EmptyType">
    <xs:annotation>
      <xs:documentation>MetadataSet is an empty element that denotes a metadata set object.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="MetadataStructure" type="EmptyType">
    <xs:annotation>
      <xs:documentation>MetadataStructure is an empty element that denotes a metadata structure definition object.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="MetadataTarget" type="EmptyType">
    <xs:annotation>
      <xs:documentation>MetadataTarget is an empty element that denotes a metadata target object.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="OrganisationMap" type="EmptyType">
    <xs:annotation>
      <xs:documentation>OrganisationMap is an empty element that denotes an organisation map object.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="OrganisationSchemeMap" type="EmptyType">
    <xs:annotation>
      <xs:documentation>OrganisationSchemeMap is an empty element that denotes an organisation scheme map object.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="OrganisationUnit" type="EmptyType">
    <xs:annotation>
      <xs:documentation>OrganisationUnit is an empty element that denotes an organisation unit object.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="OrganisationUnitScheme" type="EmptyType">
    <xs:annotation>
      <xs:documentation>OrganisationUnitScheme is an empty element that denotes an organisation unit scheme object.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="PrimaryMeasure" type="EmptyType">
    <xs:annotation>
      <xs:documentation>PrimaryMeasure is an empty element that denotes a primary measure object.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="Process" type="EmptyType">
    <xs:annotation>
      <xs:documentation>Process is an empty element that denotes a process object.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="ProcessStep" type="EmptyType">
    <xs:annotation>
      <xs:documentation>ProcessStep is an empty element that denotes a process step object.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="ProvisionAgreement" type="EmptyType">
    <xs:annotation>
      <xs:documentation>ProvisionAgreement is an empty element that denotes a provision agreement object.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="ReportingCategory" type="EmptyType">
    <xs:annotation>
      <xs:documentation>ReportingCategory is an empty element that denotes a reporting category object.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="ReportingCategoryMap" type="EmptyType">
    <xs:annotation>
      <xs:documentation>ReportingCategoryMap is an empty element that denotes a reporting category map object.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="ReportingTaxonomy" type="EmptyType">
    <xs:annotation>
      <xs:documentation>ReportingTaxonomy is an empty element that denotes a reporting taxonomy object.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="ReportingTaxonomyMap" type="EmptyType">
    <xs:annotation>
      <xs:documentation>ReportingTaxonomyMap is an empty element that denotes a reporting taxonomy map object.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="ReportPeriodTarget" type="EmptyType">
    <xs:annotation>
      <xs:documentation>ReportPeriodTarget is an empty element that denotes a report period target object.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="ReportStructure" type="EmptyType">
    <xs:annotation>
      <xs:documentation>ReportStructure is an empty element that denotes a report structure object.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="StructureMap" type="EmptyType">
    <xs:annotation>
      <xs:documentation>StructureMap is an empty element that denotes a structure map object.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="StructureSet" type="EmptyType">
    <xs:annotation>
      <xs:documentation>StructureSet is an empty element that denotes a structure set object.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="TimeDimension" type="EmptyType">
    <xs:annotation>
      <xs:documentation>TimeDimension is an empty element that denotes a time dimension object.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="Transition" type="EmptyType">
    <xs:annotation>
      <xs:documentation>Transition is an empty element that denotes a transition object.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="ObjectTypeListType">
    <xs:annotation>
      <xs:documentation>ObjectTypeListType provides a means for enumerating object types.</xs:documentation>
    </xs:annotation>
    <xs:all>
      <xs:element minOccurs="0" ref="Any" />
      <xs:element minOccurs="0" ref="Agency" />
      <xs:element minOccurs="0" ref="AgencyScheme" />
      <xs:element minOccurs="0" ref="AttachmentConstraint" />
      <xs:element minOccurs="0" ref="Attribute" />
      <xs:element minOccurs="0" ref="AttributeDescriptor" />
      <xs:element minOccurs="0" ref="Categorisation" />
      <xs:element minOccurs="0" ref="Category" />
      <xs:element minOccurs="0" ref="CategorySchemeMap" />
      <xs:element minOccurs="0" ref="CategoryScheme" />
      <xs:element minOccurs="0" ref="Code" />
      <xs:element minOccurs="0" ref="CodeMap" />
      <xs:element minOccurs="0" ref="Codelist" />
      <xs:element minOccurs="0" ref="CodelistMap" />
      <xs:element minOccurs="0" ref="ComponentMap" />
      <xs:element minOccurs="0" ref="Concept" />
      <xs:element minOccurs="0" ref="ConceptMap" />
      <xs:element minOccurs="0" ref="ConceptScheme" />
      <xs:element minOccurs="0" ref="ConceptSchemeMap" />
      <xs:element minOccurs="0" ref="ContentConstraint" />
      <xs:element minOccurs="0" ref="Dataflow" />
      <xs:element minOccurs="0" ref="DataConsumer" />
      <xs:element minOccurs="0" ref="DataConsumerScheme" />
      <xs:element minOccurs="0" ref="DataProvider" />
      <xs:element minOccurs="0" ref="DataProviderScheme" />
      <xs:element minOccurs="0" ref="DataSetTarget" />
      <xs:element minOccurs="0" ref="DataStructure" />
      <xs:element minOccurs="0" ref="Dimension" />
      <xs:element minOccurs="0" ref="DimensionDescriptor" />
      <xs:element minOccurs="0" ref="DimensionDescriptorValuesTarget" />
      <xs:element minOccurs="0" ref="GroupDimensionDescriptor" />
      <xs:element minOccurs="0" ref="HierarchicalCode" />
      <xs:element minOccurs="0" ref="HierarchicalCodelist" />
      <xs:element minOccurs="0" ref="Hierarchy" />
      <xs:element minOccurs="0" ref="HybridCodelistMap" />
      <xs:element minOccurs="0" ref="HybridCodeMap" />
      <xs:element minOccurs="0" ref="IdentifiableObjectTarget" />
      <xs:element minOccurs="0" ref="Level" />
      <xs:element minOccurs="0" ref="MeasureDescriptor" />
      <xs:element minOccurs="0" ref="MeasureDimension" />
      <xs:element minOccurs="0" ref="Metadataflow" />
      <xs:element minOccurs="0" ref="MetadataAttribute" />
      <xs:element minOccurs="0" ref="MetadataSet" />
      <xs:element minOccurs="0" ref="MetadataStructure" />
      <xs:element minOccurs="0" ref="MetadataTarget" />
      <xs:element minOccurs="0" ref="OrganisationMap" />
      <xs:element minOccurs="0" ref="OrganisationSchemeMap" />
      <xs:element minOccurs="0" ref="OrganisationUnit" />
      <xs:element minOccurs="0" ref="OrganisationUnitScheme" />
      <xs:element minOccurs="0" ref="PrimaryMeasure" />
      <xs:element minOccurs="0" ref="Process" />
      <xs:element minOccurs="0" ref="ProcessStep" />
      <xs:element minOccurs="0" ref="ProvisionAgreement" />
      <xs:element minOccurs="0" ref="ReportingCategory" />
      <xs:element minOccurs="0" ref="ReportingCategoryMap" />
      <xs:element minOccurs="0" ref="ReportingTaxonomy" />
      <xs:element minOccurs="0" ref="ReportingTaxonomyMap" />
      <xs:element minOccurs="0" ref="ReportPeriodTarget" />
      <xs:element minOccurs="0" ref="ReportStructure" />
      <xs:element minOccurs="0" ref="StructureMap" />
      <xs:element minOccurs="0" ref="StructureSet" />
      <xs:element minOccurs="0" ref="TimeDimension" />
      <xs:element minOccurs="0" ref="Transition" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="MaintainableObjectTypeListType">
    <xs:annotation>
      <xs:documentation>MaintainableObjectTypeListType provides a means for enumerating maintainable object types.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:restriction base="ObjectTypeListType">
        <xs:all>
          <xs:element minOccurs="0" ref="AgencyScheme" />
          <xs:element minOccurs="0" ref="AttachmentConstraint" />
          <xs:element minOccurs="0" ref="Categorisation" />
          <xs:element minOccurs="0" ref="CategoryScheme" />
          <xs:element minOccurs="0" ref="Codelist" />
          <xs:element minOccurs="0" ref="ConceptScheme" />
          <xs:element minOccurs="0" ref="ContentConstraint" />
          <xs:element minOccurs="0" ref="Dataflow" />
          <xs:element minOccurs="0" ref="DataConsumerScheme" />
          <xs:element minOccurs="0" ref="DataProviderScheme" />
          <xs:element minOccurs="0" ref="DataStructure" />
          <xs:element minOccurs="0" ref="HierarchicalCodelist" />
          <xs:element minOccurs="0" ref="Metadataflow" />
          <xs:element minOccurs="0" ref="MetadataStructure" />
          <xs:element minOccurs="0" ref="OrganisationUnitScheme" />
          <xs:element minOccurs="0" ref="Process" />
          <xs:element minOccurs="0" ref="ProvisionAgreement" />
          <xs:element minOccurs="0" ref="ReportingTaxonomy" />
          <xs:element minOccurs="0" ref="StructureSet" />
        </xs:all>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
</xs:schema>